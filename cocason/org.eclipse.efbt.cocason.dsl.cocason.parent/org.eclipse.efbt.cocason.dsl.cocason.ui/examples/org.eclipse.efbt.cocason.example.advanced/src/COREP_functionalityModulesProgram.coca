ProgramAndCalls : { program : TRLProgram : { smcubesStaticModel : SMCubesStaticModel COREPCoreProcessStaticModel : {
	functionalityModules : FunctionalityModuleModule COREPCoreProcess : {
		license : "Copyright (c) 2020 Bird Software Solutions Ltd&#xA; All rights reserved. This file and the accompanying materials are made available under the terms of the Eclipse Public License v2.0 which accompanies this distribution, and is available at http://www.eclipse.org/efbt/legal/epl-v20.html&#xA;&#xA;SPDX-License-Identifier: EPL-2.0 &#xA;&#xA; Contributors:&#xA; Neil Mackenzie - initial API and implementation&#xD;"
		FunctionalityModules : [ ParallelFunctionalityModule CreditRiskProcesses : {
			subModules : [ DataProcessingFunctionalityModule IRB : { } , 
				SerialFunctionalityModule StandardApproach : {
					subModules : [ 
						ReadDataSourceFunctionalityModule ReadExposures : { } , 
						DataProcessingFunctionalityModule MortageExposureProcessing : { } , 
						ParallelFunctionalityModule Netting : { 
							subModules : [ DataProcessingFunctionalityModule LoanDepositNetting : { } , 
								SerialFunctionalityModule SecuritiesNetting : { 
									subModules : [ 
										DataProcessingFunctionalityModule PlainSecuritiesNetting : { } , 
										DataProcessingFunctionalityModule RepoSecuritiesNetting : { } , 
										DataProcessingFunctionalityModule CDSUnderlyingNetting : { }
									]
								} , DataProcessingFunctionalityModule DerivativesNetting : { } , 
								DataProcessingFunctionalityModule SFTNetting : { }
							]
						} , 
						DataProcessingFunctionalityModule DeriveExposureClass : { } , 
						DataProcessingFunctionalityModule AssignExposureClass : { } , 
						ParallelFunctionalityModule CalculateRiskWeight : { 
							subModules : [ 
								SerialFunctionalityModule CalculateCorporateRiskWeight : { 
									subModules : [ 
										ReadDataSourceFunctionalityModule ReadRatingsData : { } , 
										DataProcessingFunctionalityModule CalculateCreditQualityStep : { } , 
										DataProcessingFunctionalityModule CalculateTheCorparateRiskweight : { }
									]
								} , 
								DataProcessingFunctionalityModule CalculateGovernementRiskWeight : { } ,
								 DataProcessingFunctionalityModule CalculateInstitiutionRiskWeight : { } , 
								 DataProcessingFunctionalityModule CalculateRetailRiskWeight : { } , 
								 DataProcessingFunctionalityModule CalculateMortgageRiskWeight : { } , 
								 DataProcessingFunctionalityModule CalculateOtherRiskWeight : { }
							]
						} , 
						DataProcessingFunctionalityModule CalculateOriginalExposure : { } , 
						SerialFunctionalityModule CreditRiskMitigation : {
							subModules : [ 
								DataProcessingFunctionalityModule ReadCollateralData : { } , 
								ParallelFunctionalityModule ApplyCreditRiskMitigationApproach : { 
									subModules : [ 
										SerialFunctionalityModule SimplifiedApproach : { 
											subModules : [ 
												DataProcessingFunctionalityModule DeterminePossibleSubstitutions : { } , 
												DataProcessingFunctionalityModule CreatInflowsAndOutflowsForSubsitutions : { }
											]
										} , SerialFunctionalityModule ComprehensiveApproach : { 
											subModules : [ 
												DataProcessingFunctionalityModule DetermineHaircuts : { } ,
												DataProcessingFunctionalityModule ApplyHaircuts : { }
											]
										}
									]
								}
							]
						} , ReportCellCreationFunctionalityModule CreateC07ReportCells : { }
					]
				}
			] } ] } } } }