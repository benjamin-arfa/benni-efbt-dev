/**
 */
package org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.util.Ecore_plus_logicAdapterFactory;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class Ecore_plus_logicItemProviderAdapterFactory extends Ecore_plus_logicAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Ecore_plus_logicItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.DerivedEntity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DerivedEntityItemProvider derivedEntityItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.DerivedEntity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDerivedEntityAdapter() {
		if (derivedEntityItemProvider == null) {
			derivedEntityItemProvider = new DerivedEntityItemProvider(this);
		}

		return derivedEntityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.IntermediateDerivedEntity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntermediateDerivedEntityItemProvider intermediateDerivedEntityItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.IntermediateDerivedEntity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntermediateDerivedEntityAdapter() {
		if (intermediateDerivedEntityItemProvider == null) {
			intermediateDerivedEntityItemProvider = new IntermediateDerivedEntityItemProvider(this);
		}

		return intermediateDerivedEntityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.GeneratedEntity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeneratedEntityItemProvider generatedEntityItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.GeneratedEntity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeneratedEntityAdapter() {
		if (generatedEntityItemProvider == null) {
			generatedEntityItemProvider = new GeneratedEntityItemProvider(this);
		}

		return generatedEntityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.AggregateFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AggregateFunctionItemProvider aggregateFunctionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.AggregateFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAggregateFunctionAdapter() {
		if (aggregateFunctionItemProvider == null) {
			aggregateFunctionItemProvider = new AggregateFunctionItemProvider(this);
		}

		return aggregateFunctionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.AggregateFunctionSpec} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AggregateFunctionSpecItemProvider aggregateFunctionSpecItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.AggregateFunctionSpec}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAggregateFunctionSpecAdapter() {
		if (aggregateFunctionSpecItemProvider == null) {
			aggregateFunctionSpecItemProvider = new AggregateFunctionSpecItemProvider(this);
		}

		return aggregateFunctionSpecItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.BasicFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BasicFunctionItemProvider basicFunctionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.BasicFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBasicFunctionAdapter() {
		if (basicFunctionItemProvider == null) {
			basicFunctionItemProvider = new BasicFunctionItemProvider(this);
		}

		return basicFunctionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.BasicFunctionSpec} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BasicFunctionSpecItemProvider basicFunctionSpecItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.BasicFunctionSpec}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBasicFunctionSpecAdapter() {
		if (basicFunctionSpecItemProvider == null) {
			basicFunctionSpecItemProvider = new BasicFunctionSpecItemProvider(this);
		}

		return basicFunctionSpecItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.BooleanFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanFunctionItemProvider booleanFunctionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.BooleanFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanFunctionAdapter() {
		if (booleanFunctionItemProvider == null) {
			booleanFunctionItemProvider = new BooleanFunctionItemProvider(this);
		}

		return booleanFunctionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.Function} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionItemProvider functionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.Function}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionAdapter() {
		if (functionItemProvider == null) {
			functionItemProvider = new FunctionItemProvider(this);
		}

		return functionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.FunctionSpec} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionSpecItemProvider functionSpecItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.FunctionSpec}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionSpecAdapter() {
		if (functionSpecItemProvider == null) {
			functionSpecItemProvider = new FunctionSpecItemProvider(this);
		}

		return functionSpecItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.FunctionSpecModule} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionSpecModuleItemProvider functionSpecModuleItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.FunctionSpecModule}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionSpecModuleAdapter() {
		if (functionSpecModuleItemProvider == null) {
			functionSpecModuleItemProvider = new FunctionSpecModuleItemProvider(this);
		}

		return functionSpecModuleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.ParamaterSpec} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParamaterSpecItemProvider paramaterSpecItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.ParamaterSpec}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParamaterSpecAdapter() {
		if (paramaterSpecItemProvider == null) {
			paramaterSpecItemProvider = new ParamaterSpecItemProvider(this);
		}

		return paramaterSpecItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.Parameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterItemProvider parameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.Parameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterAdapter() {
		if (parameterItemProvider == null) {
			parameterItemProvider = new ParameterItemProvider(this);
		}

		return parameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.MemberParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MemberParameterItemProvider memberParameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.MemberParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMemberParameterAdapter() {
		if (memberParameterItemProvider == null) {
			memberParameterItemProvider = new MemberParameterItemProvider(this);
		}

		return memberParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.ValueParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueParameterItemProvider valueParameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.ValueParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueParameterAdapter() {
		if (valueParameterItemProvider == null) {
			valueParameterItemProvider = new ValueParameterItemProvider(this);
		}

		return valueParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.AggregateDerivedFeature} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AggregateDerivedFeatureItemProvider aggregateDerivedFeatureItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.AggregateDerivedFeature}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAggregateDerivedFeatureAdapter() {
		if (aggregateDerivedFeatureItemProvider == null) {
			aggregateDerivedFeatureItemProvider = new AggregateDerivedFeatureItemProvider(this);
		}

		return aggregateDerivedFeatureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.BasicDerivedFeature} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BasicDerivedFeatureItemProvider basicDerivedFeatureItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.BasicDerivedFeature}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBasicDerivedFeatureAdapter() {
		if (basicDerivedFeatureItemProvider == null) {
			basicDerivedFeatureItemProvider = new BasicDerivedFeatureItemProvider(this);
		}

		return basicDerivedFeatureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.BasicScenarioLogic} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BasicScenarioLogicItemProvider basicScenarioLogicItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.BasicScenarioLogic}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBasicScenarioLogicAdapter() {
		if (basicScenarioLogicItemProvider == null) {
			basicScenarioLogicItemProvider = new BasicScenarioLogicItemProvider(this);
		}

		return basicScenarioLogicItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.DerivedFeature} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DerivedFeatureItemProvider derivedFeatureItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.DerivedFeature}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDerivedFeatureAdapter() {
		if (derivedFeatureItemProvider == null) {
			derivedFeatureItemProvider = new DerivedFeatureItemProvider(this);
		}

		return derivedFeatureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.BaseFeature} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaseFeatureItemProvider baseFeatureItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.BaseFeature}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBaseFeatureAdapter() {
		if (baseFeatureItemProvider == null) {
			baseFeatureItemProvider = new BaseFeatureItemProvider(this);
		}

		return baseFeatureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.DerivedFeatureGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DerivedFeatureGroupItemProvider derivedFeatureGroupItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.DerivedFeatureGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDerivedFeatureGroupAdapter() {
		if (derivedFeatureGroupItemProvider == null) {
			derivedFeatureGroupItemProvider = new DerivedFeatureGroupItemProvider(this);
		}

		return derivedFeatureGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.FeatureParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FeatureParameterItemProvider featureParameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.FeatureParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFeatureParameterAdapter() {
		if (featureParameterItemProvider == null) {
			featureParameterItemProvider = new FeatureParameterItemProvider(this);
		}

		return featureParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.ProxyFeatureParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProxyFeatureParameterItemProvider proxyFeatureParameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.ProxyFeatureParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProxyFeatureParameterAdapter() {
		if (proxyFeatureParameterItemProvider == null) {
			proxyFeatureParameterItemProvider = new ProxyFeatureParameterItemProvider(this);
		}

		return proxyFeatureParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.GetAttributeFromEntityDerivedFeature} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GetAttributeFromEntityDerivedFeatureItemProvider getAttributeFromEntityDerivedFeatureItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.GetAttributeFromEntityDerivedFeature}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGetAttributeFromEntityDerivedFeatureAdapter() {
		if (getAttributeFromEntityDerivedFeatureItemProvider == null) {
			getAttributeFromEntityDerivedFeatureItemProvider = new GetAttributeFromEntityDerivedFeatureItemProvider(this);
		}

		return getAttributeFromEntityDerivedFeatureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.AttributeFromEntityParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeFromEntityParameterItemProvider attributeFromEntityParameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.AttributeFromEntityParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeFromEntityParameterAdapter() {
		if (attributeFromEntityParameterItemProvider == null) {
			attributeFromEntityParameterItemProvider = new AttributeFromEntityParameterItemProvider(this);
		}

		return attributeFromEntityParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.ProxyAttributeFromEntityParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProxyAttributeFromEntityParameterItemProvider proxyAttributeFromEntityParameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.ProxyAttributeFromEntityParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProxyAttributeFromEntityParameterAdapter() {
		if (proxyAttributeFromEntityParameterItemProvider == null) {
			proxyAttributeFromEntityParameterItemProvider = new ProxyAttributeFromEntityParameterItemProvider(this);
		}

		return proxyAttributeFromEntityParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.CustomRowCreationApproach} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomRowCreationApproachItemProvider customRowCreationApproachItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.CustomRowCreationApproach}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomRowCreationApproachAdapter() {
		if (customRowCreationApproachItemProvider == null) {
			customRowCreationApproachItemProvider = new CustomRowCreationApproachItemProvider(this);
		}

		return customRowCreationApproachItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.FilterAndGroupToOneRowCreationApproach} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FilterAndGroupToOneRowCreationApproachItemProvider filterAndGroupToOneRowCreationApproachItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.FilterAndGroupToOneRowCreationApproach}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFilterAndGroupToOneRowCreationApproachAdapter() {
		if (filterAndGroupToOneRowCreationApproachItemProvider == null) {
			filterAndGroupToOneRowCreationApproachItemProvider = new FilterAndGroupToOneRowCreationApproachItemProvider(this);
		}

		return filterAndGroupToOneRowCreationApproachItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.RowCreationApproachForEntity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RowCreationApproachForEntityItemProvider rowCreationApproachForEntityItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.RowCreationApproachForEntity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRowCreationApproachForEntityAdapter() {
		if (rowCreationApproachForEntityItemProvider == null) {
			rowCreationApproachForEntityItemProvider = new RowCreationApproachForEntityItemProvider(this);
		}

		return rowCreationApproachForEntityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.OneToOneRowCreationApproach} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OneToOneRowCreationApproachItemProvider oneToOneRowCreationApproachItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.OneToOneRowCreationApproach}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOneToOneRowCreationApproachAdapter() {
		if (oneToOneRowCreationApproachItemProvider == null) {
			oneToOneRowCreationApproachItemProvider = new OneToOneRowCreationApproachItemProvider(this);
		}

		return oneToOneRowCreationApproachItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.FilterRowCreationApproach} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FilterRowCreationApproachItemProvider filterRowCreationApproachItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.FilterRowCreationApproach}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFilterRowCreationApproachAdapter() {
		if (filterRowCreationApproachItemProvider == null) {
			filterRowCreationApproachItemProvider = new FilterRowCreationApproachItemProvider(this);
		}

		return filterRowCreationApproachItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.RowCreationApproach} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RowCreationApproachItemProvider rowCreationApproachItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.RowCreationApproach}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRowCreationApproachAdapter() {
		if (rowCreationApproachItemProvider == null) {
			rowCreationApproachItemProvider = new RowCreationApproachItemProvider(this);
		}

		return rowCreationApproachItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.GroupByRowCreationApproach} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroupByRowCreationApproachItemProvider groupByRowCreationApproachItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.GroupByRowCreationApproach}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroupByRowCreationApproachAdapter() {
		if (groupByRowCreationApproachItemProvider == null) {
			groupByRowCreationApproachItemProvider = new GroupByRowCreationApproachItemProvider(this);
		}

		return groupByRowCreationApproachItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.RowJoinFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RowJoinFunctionItemProvider rowJoinFunctionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.RowJoinFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRowJoinFunctionAdapter() {
		if (rowJoinFunctionItemProvider == null) {
			rowJoinFunctionItemProvider = new RowJoinFunctionItemProvider(this);
		}

		return rowJoinFunctionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.UnionRowCreationApproach} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnionRowCreationApproachItemProvider unionRowCreationApproachItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.UnionRowCreationApproach}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnionRowCreationApproachAdapter() {
		if (unionRowCreationApproachItemProvider == null) {
			unionRowCreationApproachItemProvider = new UnionRowCreationApproachItemProvider(this);
		}

		return unionRowCreationApproachItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.ExplodeArrayOfStructsRowFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExplodeArrayOfStructsRowFunctionItemProvider explodeArrayOfStructsRowFunctionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.computation.model.ecore_plus_logic.ExplodeArrayOfStructsRowFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExplodeArrayOfStructsRowFunctionAdapter() {
		if (explodeArrayOfStructsRowFunctionItemProvider == null) {
			explodeArrayOfStructsRowFunctionItemProvider = new ExplodeArrayOfStructsRowFunctionItemProvider(this);
		}

		return explodeArrayOfStructsRowFunctionItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (derivedEntityItemProvider != null) derivedEntityItemProvider.dispose();
		if (intermediateDerivedEntityItemProvider != null) intermediateDerivedEntityItemProvider.dispose();
		if (generatedEntityItemProvider != null) generatedEntityItemProvider.dispose();
		if (aggregateFunctionItemProvider != null) aggregateFunctionItemProvider.dispose();
		if (aggregateFunctionSpecItemProvider != null) aggregateFunctionSpecItemProvider.dispose();
		if (basicFunctionItemProvider != null) basicFunctionItemProvider.dispose();
		if (basicFunctionSpecItemProvider != null) basicFunctionSpecItemProvider.dispose();
		if (booleanFunctionItemProvider != null) booleanFunctionItemProvider.dispose();
		if (functionItemProvider != null) functionItemProvider.dispose();
		if (functionSpecItemProvider != null) functionSpecItemProvider.dispose();
		if (functionSpecModuleItemProvider != null) functionSpecModuleItemProvider.dispose();
		if (paramaterSpecItemProvider != null) paramaterSpecItemProvider.dispose();
		if (parameterItemProvider != null) parameterItemProvider.dispose();
		if (memberParameterItemProvider != null) memberParameterItemProvider.dispose();
		if (valueParameterItemProvider != null) valueParameterItemProvider.dispose();
		if (aggregateDerivedFeatureItemProvider != null) aggregateDerivedFeatureItemProvider.dispose();
		if (basicDerivedFeatureItemProvider != null) basicDerivedFeatureItemProvider.dispose();
		if (basicScenarioLogicItemProvider != null) basicScenarioLogicItemProvider.dispose();
		if (derivedFeatureItemProvider != null) derivedFeatureItemProvider.dispose();
		if (baseFeatureItemProvider != null) baseFeatureItemProvider.dispose();
		if (derivedFeatureGroupItemProvider != null) derivedFeatureGroupItemProvider.dispose();
		if (featureParameterItemProvider != null) featureParameterItemProvider.dispose();
		if (proxyFeatureParameterItemProvider != null) proxyFeatureParameterItemProvider.dispose();
		if (getAttributeFromEntityDerivedFeatureItemProvider != null) getAttributeFromEntityDerivedFeatureItemProvider.dispose();
		if (attributeFromEntityParameterItemProvider != null) attributeFromEntityParameterItemProvider.dispose();
		if (proxyAttributeFromEntityParameterItemProvider != null) proxyAttributeFromEntityParameterItemProvider.dispose();
		if (customRowCreationApproachItemProvider != null) customRowCreationApproachItemProvider.dispose();
		if (filterAndGroupToOneRowCreationApproachItemProvider != null) filterAndGroupToOneRowCreationApproachItemProvider.dispose();
		if (rowCreationApproachForEntityItemProvider != null) rowCreationApproachForEntityItemProvider.dispose();
		if (oneToOneRowCreationApproachItemProvider != null) oneToOneRowCreationApproachItemProvider.dispose();
		if (filterRowCreationApproachItemProvider != null) filterRowCreationApproachItemProvider.dispose();
		if (rowCreationApproachItemProvider != null) rowCreationApproachItemProvider.dispose();
		if (groupByRowCreationApproachItemProvider != null) groupByRowCreationApproachItemProvider.dispose();
		if (rowJoinFunctionItemProvider != null) rowJoinFunctionItemProvider.dispose();
		if (unionRowCreationApproachItemProvider != null) unionRowCreationApproachItemProvider.dispose();
		if (explodeArrayOfStructsRowFunctionItemProvider != null) explodeArrayOfStructsRowFunctionItemProvider.dispose();
	}

}
