/**
 */
package org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.util.FunctionsAdapterFactory;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class FunctionsItemProviderAdapterFactory extends FunctionsAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public FunctionsItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.AggregateFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AggregateFunctionItemProvider aggregateFunctionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.AggregateFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAggregateFunctionAdapter() {
		if (aggregateFunctionItemProvider == null) {
			aggregateFunctionItemProvider = new AggregateFunctionItemProvider(this);
		}

		return aggregateFunctionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.AggregateFunctionSpec} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AggregateFunctionSpecItemProvider aggregateFunctionSpecItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.AggregateFunctionSpec}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAggregateFunctionSpecAdapter() {
		if (aggregateFunctionSpecItemProvider == null) {
			aggregateFunctionSpecItemProvider = new AggregateFunctionSpecItemProvider(this);
		}

		return aggregateFunctionSpecItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.BasicFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BasicFunctionItemProvider basicFunctionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.BasicFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBasicFunctionAdapter() {
		if (basicFunctionItemProvider == null) {
			basicFunctionItemProvider = new BasicFunctionItemProvider(this);
		}

		return basicFunctionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.BasicFunctionSpec} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BasicFunctionSpecItemProvider basicFunctionSpecItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.BasicFunctionSpec}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBasicFunctionSpecAdapter() {
		if (basicFunctionSpecItemProvider == null) {
			basicFunctionSpecItemProvider = new BasicFunctionSpecItemProvider(this);
		}

		return basicFunctionSpecItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.BooleanFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanFunctionItemProvider booleanFunctionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.BooleanFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanFunctionAdapter() {
		if (booleanFunctionItemProvider == null) {
			booleanFunctionItemProvider = new BooleanFunctionItemProvider(this);
		}

		return booleanFunctionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.Function} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionItemProvider functionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.Function}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionAdapter() {
		if (functionItemProvider == null) {
			functionItemProvider = new FunctionItemProvider(this);
		}

		return functionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.FunctionSpec} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionSpecItemProvider functionSpecItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.FunctionSpec}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionSpecAdapter() {
		if (functionSpecItemProvider == null) {
			functionSpecItemProvider = new FunctionSpecItemProvider(this);
		}

		return functionSpecItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.FunctionSpecModule} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionSpecModuleItemProvider functionSpecModuleItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.FunctionSpecModule}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionSpecModuleAdapter() {
		if (functionSpecModuleItemProvider == null) {
			functionSpecModuleItemProvider = new FunctionSpecModuleItemProvider(this);
		}

		return functionSpecModuleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.ParamaterSpec} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParamaterSpecItemProvider paramaterSpecItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.ParamaterSpec}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParamaterSpecAdapter() {
		if (paramaterSpecItemProvider == null) {
			paramaterSpecItemProvider = new ParamaterSpecItemProvider(this);
		}

		return paramaterSpecItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.Parameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterItemProvider parameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.Parameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterAdapter() {
		if (parameterItemProvider == null) {
			parameterItemProvider = new ParameterItemProvider(this);
		}

		return parameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.GetStructColumnFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GetStructColumnFunctionItemProvider getStructColumnFunctionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.GetStructColumnFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGetStructColumnFunctionAdapter() {
		if (getStructColumnFunctionItemProvider == null) {
			getStructColumnFunctionItemProvider = new GetStructColumnFunctionItemProvider(this);
		}

		return getStructColumnFunctionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.SpeculativeStructColumnParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpeculativeStructColumnParameterItemProvider speculativeStructColumnParameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.SpeculativeStructColumnParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpeculativeStructColumnParameterAdapter() {
		if (speculativeStructColumnParameterItemProvider == null) {
			speculativeStructColumnParameterItemProvider = new SpeculativeStructColumnParameterItemProvider(this);
		}

		return speculativeStructColumnParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.AggregateColumnFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AggregateColumnFunctionItemProvider aggregateColumnFunctionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.AggregateColumnFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAggregateColumnFunctionAdapter() {
		if (aggregateColumnFunctionItemProvider == null) {
			aggregateColumnFunctionItemProvider = new AggregateColumnFunctionItemProvider(this);
		}

		return aggregateColumnFunctionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.BasicColumnFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BasicColumnFunctionItemProvider basicColumnFunctionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.BasicColumnFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBasicColumnFunctionAdapter() {
		if (basicColumnFunctionItemProvider == null) {
			basicColumnFunctionItemProvider = new BasicColumnFunctionItemProvider(this);
		}

		return basicColumnFunctionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.ColumnFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ColumnFunctionItemProvider columnFunctionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.ColumnFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createColumnFunctionAdapter() {
		if (columnFunctionItemProvider == null) {
			columnFunctionItemProvider = new ColumnFunctionItemProvider(this);
		}

		return columnFunctionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.ColumnFunctionGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ColumnFunctionGroupItemProvider columnFunctionGroupItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.ColumnFunctionGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createColumnFunctionGroupAdapter() {
		if (columnFunctionGroupItemProvider == null) {
			columnFunctionGroupItemProvider = new ColumnFunctionGroupItemProvider(this);
		}

		return columnFunctionGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.CubeColumn} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CubeColumnItemProvider cubeColumnItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.CubeColumn}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCubeColumnAdapter() {
		if (cubeColumnItemProvider == null) {
			cubeColumnItemProvider = new CubeColumnItemProvider(this);
		}

		return cubeColumnItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.SpeculativeCubeColumnParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpeculativeCubeColumnParameterItemProvider speculativeCubeColumnParameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.SpeculativeCubeColumnParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpeculativeCubeColumnParameterAdapter() {
		if (speculativeCubeColumnParameterItemProvider == null) {
			speculativeCubeColumnParameterItemProvider = new SpeculativeCubeColumnParameterItemProvider(this);
		}

		return speculativeCubeColumnParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.MemberParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MemberParameterItemProvider memberParameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.MemberParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMemberParameterAdapter() {
		if (memberParameterItemProvider == null) {
			memberParameterItemProvider = new MemberParameterItemProvider(this);
		}

		return memberParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.ValueParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueParameterItemProvider valueParameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.efbt.cocalimo.smcubes_with_lineage.model.functions.ValueParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueParameterAdapter() {
		if (valueParameterItemProvider == null) {
			valueParameterItemProvider = new ValueParameterItemProvider(this);
		}

		return valueParameterItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (aggregateFunctionItemProvider != null) aggregateFunctionItemProvider.dispose();
		if (aggregateFunctionSpecItemProvider != null) aggregateFunctionSpecItemProvider.dispose();
		if (basicFunctionItemProvider != null) basicFunctionItemProvider.dispose();
		if (basicFunctionSpecItemProvider != null) basicFunctionSpecItemProvider.dispose();
		if (booleanFunctionItemProvider != null) booleanFunctionItemProvider.dispose();
		if (functionItemProvider != null) functionItemProvider.dispose();
		if (functionSpecItemProvider != null) functionSpecItemProvider.dispose();
		if (functionSpecModuleItemProvider != null) functionSpecModuleItemProvider.dispose();
		if (paramaterSpecItemProvider != null) paramaterSpecItemProvider.dispose();
		if (parameterItemProvider != null) parameterItemProvider.dispose();
		if (getStructColumnFunctionItemProvider != null) getStructColumnFunctionItemProvider.dispose();
		if (speculativeStructColumnParameterItemProvider != null) speculativeStructColumnParameterItemProvider.dispose();
		if (aggregateColumnFunctionItemProvider != null) aggregateColumnFunctionItemProvider.dispose();
		if (basicColumnFunctionItemProvider != null) basicColumnFunctionItemProvider.dispose();
		if (columnFunctionItemProvider != null) columnFunctionItemProvider.dispose();
		if (columnFunctionGroupItemProvider != null) columnFunctionGroupItemProvider.dispose();
		if (cubeColumnItemProvider != null) cubeColumnItemProvider.dispose();
		if (speculativeCubeColumnParameterItemProvider != null) speculativeCubeColumnParameterItemProvider.dispose();
		if (memberParameterItemProvider != null) memberParameterItemProvider.dispose();
		if (valueParameterItemProvider != null) valueParameterItemProvider.dispose();
	}

}
