/*
 * generated by Xtext 2.26.0
 */
package org.eclipse.efbt.openregspecs.formatting2

import bird_model.BIRDModel
import com.google.inject.Inject
import org.eclipse.efbt.openregspecs.model.openregspecs_smcubes_core_extension.SMCubesCoreModel
import org.eclipse.efbt.openregspecs.services.OpenRegSpecsDSLGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class OpenRegSpecsDSLFormatter extends AbstractFormatter2 {
	
	@Inject extension OpenRegSpecsDSLGrammarAccess

	def dispatch void format(BIRDModel bIRDModel, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		bIRDModel.smCubesCoreModel.format
		for (entityModule : bIRDModel.entityModules) {
			entityModule.format
		}
		for (sQLEntityModule : bIRDModel.SQLEntityModules) {
			sQLEntityModule.format
		}
		for (subProcess : bIRDModel.subProcesses) {
			subProcess.format
		}
		for (requirementsModule : bIRDModel.requirements) {
			requirementsModule.format
		}
		for (testModule : bIRDModel.tests) {
			testModule.format
		}
	}

	def dispatch void format(SMCubesCoreModel sMCubesCoreModel, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (variableModule : sMCubesCoreModel.variableModules) {
			variableModule.format
		}
		for (domainModule : sMCubesCoreModel.domainModules) {
			domainModule.format
		}
		for (memberModule : sMCubesCoreModel.memberModules) {
			memberModule.format
		}
		for (subDomainModule : sMCubesCoreModel.subDomainModules) {
			subDomainModule.format
		}
		for (memberHierarchyModule : sMCubesCoreModel.memberHierarchyModules) {
			memberHierarchyModule.format
		}
	}
	
	// TODO: implement for EntityModule, SQLEntityModule, SubProcess, RequirementsModule, TestModule, VariableModule, DomainModule, MemberModule, SubDomainModule, MemberHierarchyModule, ModuleDependencies, Module, SUBDOMAIN, GeneratedEntity, DerivedEntity, BasicEntity, View, SelectClause, ServiceTask, ScriptTask, Scenario, TitledRequirementsSection, AllowedTypes, Test
}
