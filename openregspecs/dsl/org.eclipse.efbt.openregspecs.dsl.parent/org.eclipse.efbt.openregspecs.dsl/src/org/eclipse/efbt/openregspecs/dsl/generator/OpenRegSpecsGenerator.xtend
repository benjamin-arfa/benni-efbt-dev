/*
 * generated by Xtext 2.27.0
 */
package org.eclipse.efbt.openregspecs.dsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.eclipse.efbt.openregspecs.model.open_reg_specs.XClass
import org.eclipse.efbt.openregspecs.model.open_reg_specs.XPackage
import org.eclipse.efbt.openregspecs.model.open_reg_specs.XAttribute
import org.eclipse.efbt.openregspecs.model.open_reg_specs.XReference
import org.eclipse.efbt.openregspecs.model.open_reg_specs.XEnum
import org.eclipse.efbt.openregspecs.model.open_reg_specs.XDataType
import org.eclipse.efbt.openregspecs.model.open_reg_specs.XOperation

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class OpenRegSpecsGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		
		fsa.generateFile('datamodel.xcore',  '''
«FOR xpackage : resource.allContents.filter(XPackage).toIterable»
package «xpackage.name»
«ENDFOR»
«FOR xclass : resource.allContents.filter(XClass).toIterable»
    «IF xclass.abstract»abstract «ENDIF»class «xclass.name» «IF xclass.superTypes.length == 1» extends «xclass.superTypes.get(0)» «ENDIF»
	«FOR xmember : xclass.members»  
		«IF xmember instanceof XAttribute» «IF xmember.ID»id «ENDIF» «xmember.type.name» «ENDIF»
		«IF xmember instanceof XReference» «IF xmember.containment»contains «ELSE»refers«ENDIF» «xmember.type.name» «IF xmember.upperBound == -1»[]  «ELSEIF !((xmember.lowerBound == 0) && (xmember.upperBound == 1)) »[«xmember.lowerBound»,«xmember.upperBound»] «xmember.name»«ENDIF»«ENDIF»	
		«IF xmember instanceof XEnum» enum «xmember.name» {
			«FOR xliteral : xmember.literals»  «xliteral.name»  as «xliteral.literal»  = «xliteral.value» «ENDFOR» 
		  
		}«ENDIF»	
		«IF xmember instanceof XOperation» op «xmember.name» «xmember.type.name» «IF xmember.upperBound == -1»[]  «ELSEIF !((xmember.lowerBound == 0) && (xmember.upperBound == 1)) »[«xmember.lowerBound»,«xmember.upperBound»] «xmember.name»«ENDIF» () {
			 {
			 	«xmember.body»
			 }
		}«ENDIF»
		
	«ENDFOR»  
«ENDFOR»
«FOR xDataType : resource.allContents.filter(XDataType).toIterable»
type  «xDataType.name» wraps «xDataType.name» 
«ENDFOR»
        ''')
	}
}
 