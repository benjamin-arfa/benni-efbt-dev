		 package C91_REFoutput_logic 		 import output_layer_enums.*		 import input_layer_enums.*		 import input_layer_entities.*		 import types.*			class C91_REF_Output_Layer_UnionItem {				refers C91_REF_OutputItem_Base  base 				op Approach_For_Prudential_Purposes  Approach_For_Prudential_Purposes() { 					"<xcore>base.Approach_For_Prudential_Purposes()</xcore>"				}				op Base  Base(){					"<xcore>base.Base()</xcore>"				 } 				op Contingent_Scenario  Contingent_Scenario() { 					"<xcore>base.Contingent_Scenario()</xcore>"				}				op Delta_Vega_Or_Curvature_Risk  Delta_Vega_Or_Curvature_Risk() {					"<xcore>base.Delta_Vega_Or_Curvature_Risk()</xcore>"				 } 				op boolean  Hypothetical_Value_Under_Specific_Assumptions() { 					"<xcore>base.Hypothetical_Value_Under_Specific_Assumptions()</xcore>"				} 				op Instrument  Instrument() {					"<xcore>base.Instrument()</xcore>"				 }				op Main_Catagory  Main_Catagory() { 					"<xcore>base.Main_Catagory()</xcore>"				} 				op Market_Risk_Portfolio  Market_Risk_Portfolio() { 					"<xcore>base.Market_Risk_Portfolio()</xcore>"				} 				op double  Own_Funds_Requirements() { 					"<xcore>base.Own_Funds_Requirements()</xcore>"				} 				op Position_In_The_Instrument  Position_In_The_Instrument() { 					"<xcore>base.Position_In_The_Instrument()</xcore>"				} 				op Prudential_Portfolio  Prudentia_lPortfolio() { 					"<xcore>base.Prudentia_lPortfolio()</xcore>"				} 				op double  Sensitivity_To_Delta_Risk_Factors() { 					"<xcore>base.Sensitivity_To_Delta_Risk_Factors()</xcore>"				} 				op Type_And_Nature_Of_Sensitivity  Type_And_Nature_Of_Sensitivity() {					"<xcore>base.Type_And_Nature_Of_Sensitivity()</xcore>"				 } 				op Type_Of_Risk  Type_Of_Risk() { 					"<xcore>base.Type_Of_Risk()</xcore>"				} 			}			class C91_REF_OutputItem_Base {				op Approach_For_Prudential_Purposes  Approach_For_Prudential_Purposes() { }				op Base  Base(){} 				op Contingent_Scenario  Contingent_Scenario() {}				op Delta_Vega_Or_Curvature_Risk  Delta_Vega_Or_Curvature_Risk() {} 				op boolean  Hypothetical_Value_Under_Specific_Assumptions() {"<xcore>false</xcore>"} 				op Instrument  Instrument() {}				op Main_Catagory  Main_Catagory() {} 				op Market_Risk_Portfolio  Market_Risk_Portfolio() {} 				op double  Own_Funds_Requirements() {"<xcore>0</xcore>"} 				op Position_In_The_Instrument  Position_In_The_Instrument() {} 				op Prudential_Portfolio  Prudentia_lPortfolio() {} 				op double  Sensitivity_To_Delta_Risk_Factors() {"<xcore>0</xcore>"} 				op Type_And_Nature_Of_Sensitivity  Type_And_Nature_Of_Sensitivity() {} 				op Type_Of_Risk  Type_Of_Risk() {}			}			class C91_REF_Output_Layer_UnionTable {			 	contains  C91_REF_Output_Layer_UnionItem [0..-1]   C91_REF_Output_Layer_UnionItems				 	refers Layer_C91_REF_OutputItem_LongDeltaSensitivityTable  layer1Table				 	refers Layer_C91_REF_OutputItem_GIRR_Net_SensitivityTable  layer2Table				 	op C91_REF_Output_Layer_UnionItem [0..-1]   C91_REF_Output_Layer_UnionItems() 				{				 	"<xcore>var items = new org.eclipse.emf.common.util.BasicEList<C91_REF_Output_Layer_UnionItem>()				 					 		 		 	for( Layer_C91_REF_OutputItem_LongDeltaSensitivity item : layer1Table.layer_C91_REF_OutputItem_LongDeltaSensitivitys)				 					 		 		 	{				 					 		 		 		var newItem = C91_REFoutput_logicFactory.eINSTANCE.createC91_REF_Output_Layer_UnionItem				 					 		 		 		newItem.base = item				 					 		 		 		items.add(newItem)				 					 		 		 	}				 										for( Layer_C91_REF_OutputItem_GIRR_Net_Sensitivity item : layer2Table.layer_C91_REF_OutputItem_GIRR_Net_Sensitivitys)				 					 		 		 	{				 					 		 		 		var newItem = C91_REFoutput_logicFactory.eINSTANCE.createC91_REF_Output_Layer_UnionItem				 					 		 		 		newItem.base = item				 					 		 		 		items.add(newItem)				 					 		 		 	}				 					 		 		 	return items</xcore>"				}			 	op String  init() 				{				 	"<xcore>rpmnutils.RPMNUtils.init(this) 				 					 	 			this.c91_REF_Output_Layer_UnionItems.addAll(C91_REF_Output_Layer_UnionItems())				 					 	 			  return null</xcore>"				}			}			class Layer_C91_REF_OutputItem_LongDeltaSensitivity  extends C91_REF_OutputItem_Base {			 	op Approach_For_Prudential_Purposes  Approach_For_Prudential_Purposes() 				{					"<xcore>input_layer_enums.Approach_For_Prudential_Purposes.SENSITIVITIES_BASED_METHOD</xcore>"				}			 	op Base  Base() 				{					"<xcore>input_layer_enums.Base.MEMORANDUM_ITEMS</xcore>"				}			 	op Contingent_Scenario  Contingent_Scenario() 				{					"<xcore>output_layer_enums.Contingent_Scenario.NA</xcore>"				}			 	op Delta_Vega_Or_Curvature_Risk  Delta_Vega_Or_Curvature_Risk() 				{					"<xcore>input_layer_enums.Delta_Vega_Or_Curvature_Risk.DELTA_RISK</xcore>"				}			 	op boolean  Hypothetical_Value_Under_Specific_Assumptions() 				{					"<xcore>false</xcore>"				}			 	op Instrument  Instrument() 				{					"<xcore>input_layer_enums.Instrument.INSTRUMENTS_OTHER_THAN_SECURITISATION_POSITIONS</xcore>"				}			 	op Main_Catagory  Main_Catagory() 				{					"<xcore>input_layer_enums.Main_Catagory.INSTRUMENTS_SUBJECT_TO_MARKET_RISK</xcore>"				}			 	op Market_Risk_Portfolio  Market_Risk_Portfolio() 				{					"<xcore>input_layer_enums.Market_Risk_Portfolio.NON_ACTP</xcore>"				}			 	op double  Own_Funds_Requirements() 				{					"<xcore>0</xcore>"				}			 	op Position_In_The_Instrument  Position_In_The_Instrument() 				{					"<xcore>input_layer_enums.Position_In_The_Instrument.LONG_POSITION</xcore>"				}			 	op Prudential_Portfolio  Prudentia_lPortfolio() 				{					"<xcore>input_layer_enums.Prudential_Portfolio.BANKING_AND_TRADING_BOOK</xcore>"				}			 	op double  Sensitivity_To_Delta_Risk_Factors() 				{					"<xcore>delta_sensitivity.delta_sensitivity</xcore>"				}			 	op Type_And_Nature_Of_Sensitivity  Type_And_Nature_Of_Sensitivity() 				{					"<xcore>input_layer_enums.Type_And_Nature_Of_Sensitivity.POSITIVE_SENSITIVITY_GROSS_PER_RISK_CLASS_UNWEIGHTED</xcore>"				}			 	op Type_Of_Risk  Type_Of_Risk() 				{					"<xcore>input_layer_enums.Type_Of_Risk.GIRR</xcore>"				}				refers Delta_sensitivity  delta_sensitivity					}							class Layer_C91_REF_OutputItem_LongDeltaSensitivityTable {			 	refers Delta_sensitivity_BaseTable  delta_sensitivity_table_reference				 	contains  Layer_C91_REF_OutputItem_LongDeltaSensitivity [0..-1]   Layer_C91_REF_OutputItem_LongDeltaSensitivitys				 	op Layer_C91_REF_OutputItem_LongDeltaSensitivity [0..-1]   Layer_C91_REF_OutputItem_LongDeltaSensitivitys() 				{				 	"<xcore>var items = new org.eclipse.emf.common.util.BasicEList<Layer_C91_REF_OutputItem_LongDeltaSensitivity>()				 					 		 	for( Delta_sensitivity item : delta_sensitivity_table_reference.delta_sensitivitys)				 					 		 	{				 					 		 		var newItem = C91_REFoutput_logicFactory.eINSTANCE.createLayer_C91_REF_OutputItem_LongDeltaSensitivity				 					 		 		newItem.delta_sensitivity = item				 					 		 		items.add(newItem)				 					 		 	}				 					 		 	return items</xcore>"				}			 	op String  init() 				{				 	"<xcore>rpmnutils.RPMNUtils.init(this)				 					 		 	this.layer_C91_REF_OutputItem_LongDeltaSensitivitys.addAll(Layer_C91_REF_OutputItem_LongDeltaSensitivitys()) 		 				 					 		 	return null</xcore>"				}			}						class Layer_C91_REF_OutputItem_GIRR_Net_Sensitivity  extends C91_REF_OutputItem_Base {			 	op Approach_For_Prudential_Purposes  Approach_For_Prudential_Purposes() 				{					"<xcore>input_layer_enums.Approach_For_Prudential_Purposes.SENSITIVITIES_BASED_METHOD</xcore>"				}			 	op Base  Base() 				{					"<xcore>input_layer_enums.Base.MEMORANDUM_ITEMS</xcore>"				}			 	op Contingent_Scenario  Contingent_Scenario() 				{					"<xcore>output_layer_enums.Contingent_Scenario.NA</xcore>"				}			 	op Delta_Vega_Or_Curvature_Risk  Delta_Vega_Or_Curvature_Risk() 				{					"<xcore>input_layer_enums.Delta_Vega_Or_Curvature_Risk.DELTA_RISK</xcore>"				}			 	op boolean  Hypothetical_Value_Under_Specific_Assumptions() 				{					"<xcore>false</xcore>"				}			 	op Instrument  Instrument() 				{					"<xcore>input_layer_enums.Instrument.INSTRUMENTS_OTHER_THAN_SECURITISATION_POSITIONS</xcore>"				}			 	op Main_Catagory  Main_Catagory() 				{					"<xcore>input_layer_enums.Main_Catagory.INSTRUMENTS_SUBJECT_TO_MARKET_RISK</xcore>"				}			 	op Market_Risk_Portfolio  Market_Risk_Portfolio() 				{					"<xcore>input_layer_enums.Market_Risk_Portfolio.NON_ACTP</xcore>"				}			 	op double  Own_Funds_Requirements() 				{					"<xcore>0</xcore>"				}			 	op Position_In_The_Instrument  Position_In_The_Instrument() 				{					"<xcore>input_layer_enums.Position_In_The_Instrument.LONG_POSITION</xcore>"				}			 	op Prudential_Portfolio  Prudentia_lPortfolio() 				{					"<xcore>input_layer_enums.Prudential_Portfolio.BANKING_AND_TRADING_BOOK</xcore>"				}			 	op double  Sensitivity_To_Delta_Risk_Factors() 				{					"<xcore>net_sensitivity.netted_delta_sensitivities</xcore>"				}			 	op Type_And_Nature_Of_Sensitivity  Type_And_Nature_Of_Sensitivity() 				{					"<xcore>input_layer_enums.Type_And_Nature_Of_Sensitivity.POSITIVE_SENSITIVITY_GROSS_PER_RISK_CLASS_UNWEIGHTED</xcore>"				}			 	op Type_Of_Risk  Type_Of_Risk() 				{					"<xcore>input_layer_enums.Type_Of_Risk.GIRR</xcore>"				}				refers Netted_delta_sensitivities_per_risk_factor_and_tenor_derived  net_sensitivity					}							class Layer_C91_REF_OutputItem_GIRR_Net_SensitivityTable {			 	refers Netted_delta_sensitivities_per_risk_factor_and_tenor_derived_DerivedTable  delta_sensitivity_table_reference				 	contains  Layer_C91_REF_OutputItem_GIRR_Net_Sensitivity [0..-1]   Layer_C91_REF_OutputItem_GIRR_Net_Sensitivitys				 	op Layer_C91_REF_OutputItem_GIRR_Net_Sensitivity [0..-1]   Layer_C91_REF_OutputItem_GIRR_Net_Sensitivitys() 				{				 	"<xcore>var items = new org.eclipse.emf.common.util.BasicEList<Layer_C91_REF_OutputItem_GIRR_Net_Sensitivity>()				 					 					 		 	for( Netted_delta_sensitivities_per_risk_factor_and_tenor_derived item : delta_sensitivity_table_reference.netted_delta_sensitivities_per_risk_factor_and_tenor_deriveds)				 					 					 		 	{				 					 					 		 		var newItem = C91_REFoutput_logicFactory.eINSTANCE.createLayer_C91_REF_OutputItem_GIRR_Net_Sensitivity				 					 					 		 		newItem.net_sensitivity = item				 					 					 		 		items.add(newItem)				 					 					 		 	}				 					 					 		 	return items</xcore>"				}			 	op String  init() 				{				 	"<xcore>rpmnutils.RPMNUtils.init(this)				 					 					 		 	this.layer_C91_REF_OutputItem_GIRR_Net_Sensitivitys.addAll(Layer_C91_REF_OutputItem_GIRR_Net_Sensitivitys()) 		 				 					 					 		 	return null</xcore>"				}			}