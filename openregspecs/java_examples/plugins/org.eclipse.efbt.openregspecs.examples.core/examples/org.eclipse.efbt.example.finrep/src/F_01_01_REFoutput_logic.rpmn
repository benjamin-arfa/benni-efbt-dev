		 package F_01_01_REFoutput_logic 		 import output_layer_enums.*		 import input_layer_entities.*		 import types.*			class F_01_01_REF_Output_Layer_UnionItem {				refers F_01_01_REF_OutputItem_Base  base 				op ACCNTNG_CLSSFCTN_domain  Accounting_classification() {				"<xcore>base.Accounting_classification()</xcore>"				} 				op Date  Reference_date() {				"<xcore>base.Reference_date()</xcore>"				} 				op String  Unit() {				"<xcore>base.Unit()</xcore>"				} 				op HDG_INSTRMNT_domain  Hedged_or_hedging_instrument() {				"<xcore>base.Hedged_or_hedging_instrument()</xcore>"				} 				op INSTTTNL_SCTR_domain  Institutional_sector() {				"<xcore>base.Institutional_sector()</xcore>"				} 				op BLN_domain  Is_held_for_sale() {				"<xcore>base.Is_held_for_sale()</xcore>"				} 				op String  Variable_for_metrics() {				"<xcore>base.Variable_for_metrics()</xcore>"				} 				op String  Observation_value() {				"<xcore>base.Observation_value()</xcore>"				} 				op String  Observed_agent_internal_identifier() {				"<xcore>base.Observed_agent_internal_identifier()</xcore>"				} 				op RPYMNT_RGHTS_domain  Repayment_rights() {				"<xcore>base.Repayment_rights()</xcore>"				} 				op TYP_ACCNTNG_ITM_domain  Type_of_accounting_item() {				"<xcore>base.Type_of_accounting_item()</xcore>"				} 				op TYP_HDG_domain  Type_of_hedge() {				"<xcore>base.Type_of_hedge()</xcore>"				} 				op TYP_INSTRMNT_domain  Type_of_instrument() {				"<xcore>base.Type_of_instrument()</xcore>"				} 			}			class F_01_01_REF_OutputItem_Base {				op ACCNTNG_CLSSFCTN_domain  Accounting_classification() {} 				op Date  Reference_date() {} 				op String  Unit() {} 				op HDG_INSTRMNT_domain  Hedged_or_hedging_instrument() {} 				op INSTTTNL_SCTR_domain  Institutional_sector() {} 				op BLN_domain  Is_held_for_sale() {} 				op String  Variable_for_metrics() {} 				op String  Observation_value() {} 				op String  Observed_agent_internal_identifier() {} 				op RPYMNT_RGHTS_domain  Repayment_rights() {} 				op TYP_ACCNTNG_ITM_domain  Type_of_accounting_item() {} 				op TYP_HDG_domain  Type_of_hedge() {} 				op TYP_INSTRMNT_domain  Type_of_instrument() {} 			}			class F_01_01_REF_Output_Layer_UnionTable {				contains F_01_01_REF_Output_Layer_UnionItem [0..-1] F_01_01_REF_Output_Layer_UnionItems 				refers Layer_F_01_01_REF_OutputItem_Cash_on_handTable  layer1Table				op F_01_01_REF_Output_Layer_UnionItem [0..-1] F_01_01_REF_Output_Layer_UnionItems() {					"<xcore>var items = new org.eclipse.emf.common.util.BasicEList<F_01_01_REF_Output_Layer_UnionItem>()	 		 	for( Layer_F_01_01_REF_OutputItem_Cash_on_hand item : layer1Table.layer_F_01_01_REF_OutputItem_Cash_on_hands)	 		 	{	 		 		var newItem = F_01_01_REFoutput_logicFactory.eINSTANCE.createF_01_01_REF_Output_Layer_UnionItem	 		 		newItem.base = item	 		 		items.add(newItem)	 		 	}	 		 	return items</xcore>"				} 				op String init() {		"<xcore>rpmnutils.RPMNUtils.init(this)  			this.f_01_01_REF_Output_Layer_UnionItems.addAll(F_01_01_REF_Output_Layer_UnionItems()) 			  return null</xcore>"		} 			}			class Layer_F_01_01_REF_OutputItem_Cash_on_hand  extends F_01_01_REF_OutputItem_Base {			 	op ACCNTNG_CLSSFCTN_domain  Accounting_classification() 				{				 	"<xcore>ACCNTNG_CLSSFCTN_domain.CASH_BALANCES_AT_CENTRAL_BANKS_AND_OTHER_DEMAND_DEPOSITS</xcore>"				}			 	op Date  Reference_date() 				{				 	"<xcore>new java.util.Date(\"01/01/2023\")</xcore>"				}			 	op HDG_INSTRMNT_domain  Hedged_or_hedging_instrument() 				{				 	"<xcore>HDG_INSTRMNT_domain.NOT_APPLICABLE</xcore>"				}			 	op INSTTTNL_SCTR_domain  Institutional_sector() 				{				 	"<xcore>INSTTTNL_SCTR_domain.NOT_APPLICABLE</xcore>"				}			 	op BLN_domain  Is_held_for_sale() 				{				 	"<xcore>BLN_domain.FALSE</xcore>"				}			 	op String  Observation_value() 				{				 	"<xcore>cash_on_hand.carrying_amount.toString()</xcore>"				}			 	op String  Observed_agent_internal_identifier() 				{				 	"<xcore>\"REPORTING_ENTITY1\"</xcore>"				}			 	op RPYMNT_RGHTS_domain  Repayment_rights() 				{				 	"<xcore>RPYMNT_RGHTS_domain.NOT_APPLICABLE</xcore>"				}			 	op TYP_ACCNTNG_ITM_domain  Type_of_accounting_item() 				{				 	"<xcore>TYP_ACCNTNG_ITM_domain.CASH_ON_HANDS</xcore>"				}			 	op TYP_HDG_domain  Type_of_hedge() 				{				 	"<xcore>TYP_HDG_domain.NOT_APPLICABLE</xcore>"				}			 	op TYP_INSTRMNT_domain  Type_of_instrument() 				{				 	"<xcore>TYP_INSTRMNT_domain.NOT_APPLICABLE</xcore>"				}			 	refers Cash_on_hand  cash_on_hand				}			class Layer_F_01_01_REF_OutputItem_Cash_on_handTable {			 	refers  Cash_on_hand_BaseTable cash_on_hand_table_reference				 	contains  Layer_F_01_01_REF_OutputItem_Cash_on_hand[0..-1]  Layer_F_01_01_REF_OutputItem_Cash_on_hands				 	op Layer_F_01_01_REF_OutputItem_Cash_on_hand[0..-1]  Layer_F_01_01_REF_OutputItem_Cash_on_hands() 				{				 	"<xcore>var items = new org.eclipse.emf.common.util.BasicEList<Layer_F_01_01_REF_OutputItem_Cash_on_hand>()				 		 	for( Cash_on_hand item : cash_on_hand_table_reference.cash_on_hands)				 		 	{				 		 		var newItem = F_01_01_REFoutput_logicFactory.eINSTANCE.createLayer_F_01_01_REF_OutputItem_Cash_on_hand				 		 		newItem.cash_on_hand = item				 		 		items.add(newItem)				 		 	}				 		 	return items</xcore>"				}			 	op String  init() 				{				 	"<xcore>rpmnutils.RPMNUtils.init(this)				 		 	this.layer_F_01_01_REF_OutputItem_Cash_on_hands.addAll(Layer_F_01_01_REF_OutputItem_Cash_on_hands()) 		 				 		 	return null</xcore>"				}			}