/*
 * generated by Xtext 2.34.0
 */
package org.eclipse.efbt.regdna.dsl.formatting2

import com.google.inject.Inject
import org.eclipse.efbt.regdna.dsl.services.RegdnaGrammarAccess
import org.eclipse.efbt.regdna.model.regdna.ELClass
import org.eclipse.efbt.regdna.model.regdna.GenerationRulesModule
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class RegdnaFormatter extends AbstractFormatter2 {
	
	@Inject extension RegdnaGrammarAccess

	def dispatch void format(GenerationRulesModule generationRulesModule, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (_import : generationRulesModule.imports) {
			_import.format
		}
		for (rulesForReport : generationRulesModule.rulesForReport) {
			rulesForReport.format
		}
	}

	def dispatch void format(ELClass eLClass, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (eLStructuralFeature : eLClass.EStructuralFeatures) {
			eLStructuralFeature.format
		}
		for (eLOperation : eLClass.EOperations) {
			eLOperation.format
		}
	}
	
	// TODO: implement for ELEnum, ELPrivateOperation, ELPackage, RulesForReport, RulesForILTable, RuleForILTablePart, TableFilter, AndPredicate, OrPredicate, NotPredicate, ReportModule, Report, ReportCell
}
