# Generated by Django 5.0.4 on 2024-07-27 10:51

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Predicate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Predicate',
                'verbose_name_plural': 'Predicates',
            },
        ),
        migrations.CreateModel(
            name='AXIS',
            fields=[
                ('axis_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='axis_id')),
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='code')),
                ('description', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='description')),
                ('is_open_axis', models.BooleanField(blank=True, default=None, null=True, verbose_name='is_open_axis')),
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='name')),
                ('order', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='order')),
                ('orientation', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='orientation')),
                ('displayName', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='displayName')),
            ],
            options={
                'verbose_name': 'AXIS',
                'verbose_name_plural': 'AXISs',
            },
        ),
        migrations.CreateModel(
            name='SDDModule',
            fields=[
                ('theDescription', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='theDescription')),
                ('license', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='license')),
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='name')),
                ('version', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='version')),
                ('dependencies', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.sddmodule')),
            ],
            options={
                'verbose_name': 'SDDModule',
                'verbose_name_plural': 'SDDModules',
            },
        ),
        migrations.CreateModel(
            name='COMBINATION_ITEM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'COMBINATION_ITEM',
                'verbose_name_plural': 'COMBINATION_ITEMs',
            },
        ),
        migrations.CreateModel(
            name='CUBE',
            fields=[
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='code')),
                ('cube_id', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='cube_id')),
                ('cube_type', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='cube_type')),
                ('description', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='description')),
                ('is_allowed', models.BooleanField(blank=True, default=None, null=True, verbose_name='is_allowed')),
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='name')),
                ('published', models.BooleanField(blank=True, default=None, null=True, verbose_name='published')),
                ('valid_from', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_from')),
                ('valid_to', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_to')),
                ('version', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='version')),
                ('displayName', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='displayName')),
            ],
            options={
                'verbose_name': 'CUBE',
                'verbose_name_plural': 'CUBEs',
            },
        ),
        migrations.CreateModel(
            name='CUBE_GROUP',
            fields=[
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='code')),
                ('cube_group_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='cube_group_id')),
                ('description', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='description')),
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'CUBE_GROUP',
                'verbose_name_plural': 'CUBE_GROUPs',
            },
        ),
        migrations.CreateModel(
            name='CUBE_HIERARCHY',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='code')),
                ('cube_hierarchy_id', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='cube_hierarchy_id')),
                ('cube_hierarchy_type', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='cube_hierarchy_type')),
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'CUBE_HIERARCHY',
                'verbose_name_plural': 'CUBE_HIERARCHYs',
            },
        ),
        migrations.CreateModel(
            name='CUBE_STRUCTURE',
            fields=[
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='code')),
                ('cube_structure_id', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='cube_structure_id')),
                ('description', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='description')),
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='name')),
                ('valid_from', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_from')),
                ('valid_to', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_to')),
                ('version', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='version')),
                ('displayName', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='displayName')),
            ],
            options={
                'verbose_name': 'CUBE_STRUCTURE',
                'verbose_name_plural': 'CUBE_STRUCTUREs',
            },
        ),
        migrations.CreateModel(
            name='ELModelElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'ELModelElement',
                'verbose_name_plural': 'ELModelElements',
            },
        ),
        migrations.CreateModel(
            name='ELStringToStringMapEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='key')),
                ('value', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='value')),
            ],
            options={
                'verbose_name': 'ELStringToStringMapEntry',
                'verbose_name_plural': 'ELStringToStringMapEntrys',
            },
        ),
        migrations.CreateModel(
            name='FACET_COLLECTION',
            fields=[
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='code')),
                ('facet_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='facet_id')),
                ('facet_value_type', models.CharField(blank=True, choices=[('BigInteger', 'BigInteger'), ('Boolean', 'Boolean'), ('DateTime', 'DateTime'), ('Day_MonthDay_Month', 'DayMonthDayMonth'), ('Decimal', 'Decimal'), ('Double', 'Double'), ('Duration', 'Duration'), ('Float', 'Float'), ('GregorianDay', 'GregorianDay'), ('GregorianMonth', 'GregorianMonth'), ('GregorianYear', 'GregorianYear'), ('Integer', 'Integer'), ('Long', 'Long'), ('Short', 'Short'), ('String', 'String'), ('Time', 'Time'), ('URI', 'URI')], default=None, max_length=255, null=True, verbose_name='facet_value_type')),
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'FACET_COLLECTION',
                'verbose_name_plural': 'FACET_COLLECTIONs',
            },
        ),
        migrations.CreateModel(
            name='facet_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decimals', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='decimals')),
                ('endTime', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='endTime')),
                ('endValue', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='endValue')),
                ('interval', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='interval')),
                ('isSequence', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='isSequence')),
                ('maxLength', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='maxLength')),
                ('maxValue', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='maxValue')),
                ('minLength', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='minLength')),
                ('minValue', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='minValue')),
                ('pattern', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='pattern')),
                ('startTime', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='startTime')),
                ('startValue', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='startValue')),
                ('timeInterval', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='timeInterval')),
            ],
            options={
                'verbose_name': 'facet_type',
                'verbose_name_plural': 'facet_types',
            },
        ),
        migrations.CreateModel(
            name='Filter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Filter',
                'verbose_name_plural': 'Filters',
            },
        ),
        migrations.CreateModel(
            name='FRAMEWORK',
            fields=[
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='code')),
                ('description', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='description')),
                ('framework_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='framework_id')),
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'FRAMEWORK',
                'verbose_name_plural': 'FRAMEWORKs',
            },
        ),
        migrations.CreateModel(
            name='Import',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('importedNamespace', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='importedNamespace')),
            ],
            options={
                'verbose_name': 'Import',
                'verbose_name_plural': 'Imports',
            },
        ),
        migrations.CreateModel(
            name='MAINTENANCE_AGENCY',
            fields=[
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='code')),
                ('maintenance_agency_id', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='maintenance_agency_id')),
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='name')),
            ],
            options={
                'verbose_name': 'MAINTENANCE_AGENCY',
                'verbose_name_plural': 'MAINTENANCE_AGENCYs',
            },
        ),
        migrations.CreateModel(
            name='MAPPING_DEFINITION',
            fields=[
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='name')),
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='code')),
                ('maintenance_agency_id', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='maintenance_agency_id')),
                ('mapping_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='mapping_id')),
                ('mapping_type', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='mapping_type')),
            ],
            options={
                'verbose_name': 'MAPPING_DEFINITION',
                'verbose_name_plural': 'MAPPING_DEFINITIONs',
            },
        ),
        migrations.CreateModel(
            name='MEMBER_MAPPING',
            fields=[
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='name')),
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='code')),
                ('maintenance_agency_id', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='maintenance_agency_id')),
                ('member_mapping_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='member_mapping_id')),
            ],
            options={
                'verbose_name': 'MEMBER_MAPPING',
                'verbose_name_plural': 'MEMBER_MAPPINGs',
            },
        ),
        migrations.CreateModel(
            name='ReportColumn',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='name')),
            ],
            options={
                'verbose_name': 'ReportColumn',
                'verbose_name_plural': 'ReportColumns',
            },
        ),
        migrations.CreateModel(
            name='ReportRow',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='name')),
            ],
            options={
                'verbose_name': 'ReportRow',
                'verbose_name_plural': 'ReportRows',
            },
        ),
        migrations.CreateModel(
            name='RuleForILTablePart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'RuleForILTablePart',
                'verbose_name_plural': 'RuleForILTableParts',
            },
        ),
        migrations.CreateModel(
            name='SelectColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'SelectColumn',
                'verbose_name_plural': 'SelectColumns',
            },
        ),
        migrations.CreateModel(
            name='VARIABLE_MAPPING',
            fields=[
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='name')),
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='code')),
                ('maintenance_agency_id', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='maintenance_agency_id')),
                ('variable_mapping_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='variable_mapping_id')),
            ],
            options={
                'verbose_name': 'VARIABLE_MAPPING',
                'verbose_name_plural': 'VARIABLE_MAPPINGs',
            },
        ),
        migrations.CreateModel(
            name='AXIS_ORDINATE',
            fields=[
                ('axis_ordinate_id', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='axis_ordinate_id')),
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='code')),
                ('description', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='description')),
                ('is_abstract_header', models.BooleanField(blank=True, default=None, null=True, verbose_name='is_open_axis')),
                ('level', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='level')),
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='name')),
                ('order', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='order')),
                ('path', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='path')),
                ('displayName', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='displayName')),
                ('axis_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.axis')),
                ('parent_axis_ordinate_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.axis_ordinate')),
            ],
            options={
                'verbose_name': 'AXIS_ORDINATE',
                'verbose_name_plural': 'AXIS_ORDINATEs',
            },
        ),
        migrations.CreateModel(
            name='COMBINATION',
            fields=[
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='code')),
                ('combination_id', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='combination_id')),
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='name')),
                ('valid_from', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_from')),
                ('valid_to', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_to')),
                ('version', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='version')),
                ('combination_items', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.combination_item')),
                ('maintenance_agency_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.maintenance_agency')),
            ],
            options={
                'verbose_name': 'COMBINATION',
                'verbose_name_plural': 'COMBINATIONs',
            },
        ),
        migrations.CreateModel(
            name='CUBE_GROUP_ENUMERATION',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='order')),
                ('valid_from', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_from')),
                ('valid_to', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_to')),
                ('cube_group_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.cube_group')),
                ('cube_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.cube')),
            ],
            options={
                'verbose_name': 'CUBE_GROUP_ENUMERATION',
                'verbose_name_plural': 'CUBE_GROUP_ENUMERATIONs',
            },
        ),
        migrations.CreateModel(
            name='CUBE_HIERARCHY_NODE',
            fields=[
                ('level', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='level')),
                ('nODE_CODE', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='nODE_CODE')),
                ('node_name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='node_name')),
                ('order', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='order')),
                ('valid_from', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_from')),
                ('valid_to', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_to')),
                ('cube_group_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.cube_group')),
                ('cube_hierarchy_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.cube_hierarchy')),
                ('parent_node_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.cube_hierarchy_node')),
            ],
            options={
                'verbose_name': 'CUBE_HIERARCHY_NODE',
                'verbose_name_plural': 'CUBE_HIERARCHY_NODEs',
            },
        ),
        migrations.CreateModel(
            name='CUBE_LINK',
            fields=[
                ('cube_link_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='cube_link_id')),
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='code')),
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='name')),
                ('description', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='description')),
                ('valid_from', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_from')),
                ('valid_to', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_to')),
                ('version', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='version')),
                ('order_relevance', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='order_relevance')),
                ('cube_link_type', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='cube_link_type')),
                ('foreign_cube_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='foreign_cube_in_cube_link', to='pybird.cube')),
                ('primary_cube_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_cube_in_cube_link', to='pybird.cube')),
                ('maintenance_agency_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.maintenance_agency')),
            ],
            options={
                'verbose_name': 'CUBE_LINK',
                'verbose_name_plural': 'CUBE_LINKs',
            },
        ),
        migrations.AddField(
            model_name='cube',
            name='cube_structure_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.cube_structure'),
        ),
        migrations.CreateModel(
            name='CUBE_STRUCTURE_ITEM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='description')),
                ('dimension_type', models.CharField(blank=True, choices=[('B', 'B'), ('M', 'M'), ('T', 'T'), ('U', 'U')], default=None, max_length=255, null=True, verbose_name='dimension_type')),
                ('is_flow', models.BooleanField(blank=True, default=None, null=True, verbose_name='is_flow')),
                ('is_mandatory', models.BooleanField(blank=True, default=None, null=True, verbose_name='is_mandatory')),
                ('order', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='order')),
                ('role', models.CharField(blank=True, choices=[('O', 'O'), ('A', 'A'), ('D', 'D')], default=None, max_length=255, null=True, verbose_name='role')),
                ('isIdentifier', models.BooleanField(blank=True, default=None, null=True, verbose_name='isIdentifier')),
                ('cube_variable_code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='cube_variable_code')),
                ('cube_structure_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.cube_structure')),
            ],
            options={
                'verbose_name': 'CUBE_STRUCTURE_ITEM',
                'verbose_name_plural': 'CUBE_STRUCTURE_ITEMs',
            },
        ),
        migrations.CreateModel(
            name='CUBE_TO_COMBINATION',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('combination_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.combination')),
                ('cube_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.cube')),
            ],
            options={
                'verbose_name': 'CUBE_TO_COMBINATION',
                'verbose_name_plural': 'CUBE_TO_COMBINATIONs',
            },
        ),
        migrations.CreateModel(
            name='ELAnnotation',
            fields=[
                ('elmodelelement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.elmodelelement')),
                ('details', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.elstringtostringmapentry')),
            ],
            options={
                'verbose_name': 'ELAnnotation',
                'verbose_name_plural': 'ELAnnotations',
            },
            bases=('pybird.elmodelelement',),
        ),
        migrations.CreateModel(
            name='ELNamedElement',
            fields=[
                ('elmodelelement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.elmodelelement')),
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'ELNamedElement',
                'verbose_name_plural': 'ELNamedElements',
            },
            bases=('pybird.elmodelelement',),
        ),
        migrations.CreateModel(
            name='FACET_ENUMERATION',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation_value', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='observation_value')),
                ('facet_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.facet_collection')),
                ('facet_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.facet_type')),
            ],
            options={
                'verbose_name': 'FACET_ENUMERATION',
                'verbose_name_plural': 'FACET_ENUMERATIONs',
            },
        ),
        migrations.AddField(
            model_name='cube_hierarchy',
            name='framework_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.framework'),
        ),
        migrations.AddField(
            model_name='cube',
            name='framework_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.framework'),
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('theDescription', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='theDescription')),
                ('license', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='license')),
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='name')),
                ('version', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='version')),
                ('dependencies', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.module')),
                ('imports', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.import')),
            ],
            options={
                'verbose_name': 'Module',
                'verbose_name_plural': 'Modules',
            },
        ),
        migrations.AddField(
            model_name='framework',
            name='maintenance_agency_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.maintenance_agency'),
        ),
        migrations.AddField(
            model_name='facet_collection',
            name='maintenance_agency_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.maintenance_agency'),
        ),
        migrations.CreateModel(
            name='DOMAIN',
            fields=[
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='code')),
                ('data_type', models.CharField(blank=True, choices=[('BigInteger', 'BigInteger'), ('Boolean', 'Boolean'), ('DateTime', 'DateTime'), ('Day_MonthDay_Month', 'DayMonthDayMonth'), ('Decimal', 'Decimal'), ('Double', 'Double'), ('Duration', 'Duration'), ('Float', 'Float'), ('GregorianDay', 'GregorianDay'), ('GregorianMonth', 'GregorianMonth'), ('GregorianYear', 'GregorianYear'), ('Integer', 'Integer'), ('Long', 'Long'), ('Short', 'Short'), ('String', 'String'), ('Time', 'Time'), ('URI', 'URI')], default=None, max_length=255, null=True, verbose_name='data_type')),
                ('description', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='description')),
                ('domain_id', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='domain_id')),
                ('is_enumerated', models.BooleanField(blank=True, default=None, null=True, verbose_name='is_enumerated')),
                ('is_reference', models.BooleanField(blank=True, default=None, null=True, verbose_name='is_reference')),
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='name')),
                ('displayName', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='displayName')),
                ('facet_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.facet_collection')),
                ('maintenance_agency_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.maintenance_agency')),
            ],
            options={
                'verbose_name': 'DOMAIN',
                'verbose_name_plural': 'DOMAINs',
            },
        ),
        migrations.AddField(
            model_name='cube_structure',
            name='maintenance_agency_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.maintenance_agency'),
        ),
        migrations.AddField(
            model_name='cube_hierarchy',
            name='maintenance_agency_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.maintenance_agency'),
        ),
        migrations.AddField(
            model_name='cube_group',
            name='maintenance_agency_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.maintenance_agency'),
        ),
        migrations.AddField(
            model_name='cube',
            name='maintenance_agency_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.maintenance_agency'),
        ),
        migrations.CreateModel(
            name='MAPPING_TO_CUBE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mapping', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.mapping_definition')),
            ],
            options={
                'verbose_name': 'MAPPING_TO_CUBE',
                'verbose_name_plural': 'MAPPING_TO_CUBEs',
            },
        ),
        migrations.CreateModel(
            name='CUBE_MAPPING',
            fields=[
                ('cube_mapping_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='cube_mapping_id')),
                ('description', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='description')),
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='name')),
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='code')),
                ('maintenance_agency_id', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='maintenance_agency_id')),
                ('source_cube', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='source_cube', to='pybird.cube')),
                ('target_cube', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='target_cube', to='pybird.cube')),
                ('mappingsToCube', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.mapping_to_cube')),
            ],
            options={
                'verbose_name': 'CUBE_MAPPING',
                'verbose_name_plural': 'CUBE_MAPPINGs',
            },
        ),
        migrations.CreateModel(
            name='MEMBER',
            fields=[
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='code')),
                ('description', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='description')),
                ('member_id', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='member_id')),
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='name')),
                ('displayName', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='displayName')),
                ('domain_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.domain')),
                ('maintenance_agency_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.maintenance_agency')),
            ],
            options={
                'verbose_name': 'MEMBER',
                'verbose_name_plural': 'MEMBERs',
            },
        ),
        migrations.CreateModel(
            name='CUBE_STRUCTURE_ITEM_LINK',
            fields=[
                ('cube_structure_item_link_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='cube_structure_item_link_id')),
                ('cube_link_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.cube_link')),
                ('foreign_cube_variable_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='foreign_cube_variable_code', to='pybird.cube_structure_item')),
                ('primary_cube_variable_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_cube_variable_code', to='pybird.cube_structure_item')),
                ('product_identifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.member')),
            ],
            options={
                'verbose_name': 'CUBE_STRUCTURE_ITEM_LINK',
                'verbose_name_plural': 'CUBE_STRUCTURE_ITEM_LINKs',
            },
        ),
        migrations.AddField(
            model_name='cube_structure_item',
            name='member_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.member'),
        ),
        migrations.AddField(
            model_name='combination_item',
            name='member_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.member'),
        ),
        migrations.CreateModel(
            name='MEMBER_HIERARCHY',
            fields=[
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='code')),
                ('description', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='description')),
                ('member_hierarchy_id', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='member_hierarchy_id')),
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='name')),
                ('domain_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.domain')),
                ('maintenance_agency_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.maintenance_agency')),
            ],
            options={
                'verbose_name': 'MEMBER_HIERARCHY',
                'verbose_name_plural': 'MEMBER_HIERARCHYs',
            },
        ),
        migrations.CreateModel(
            name='MEMBER_HIERARCHY_NODE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comparator', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='comparator')),
                ('level', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='level')),
                ('operator', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='operator')),
                ('valid_from', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_from')),
                ('valid_to', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_to')),
                ('member_hierarchy_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.member_hierarchy')),
                ('member_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='member_id_in_hierarchy', to='pybird.member')),
                ('parent_member_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parent_member_id', to='pybird.member')),
            ],
            options={
                'verbose_name': 'MEMBER_HIERARCHY_NODE',
                'verbose_name_plural': 'MEMBER_HIERARCHY_NODEs',
            },
        ),
        migrations.CreateModel(
            name='MEMBER_LINK',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_from', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_from')),
                ('valid_to', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_to')),
                ('is_linked', models.BooleanField(blank=True, default=None, null=True, verbose_name='is_linked')),
                ('cube_structure_item_link_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.cube_structure_item_link')),
                ('foreign_member_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='foreign_member_id', to='pybird.member')),
                ('primary_member_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_member_id', to='pybird.member')),
            ],
            options={
                'verbose_name': 'MEMBER_LINK',
                'verbose_name_plural': 'MEMBER_LINKs',
            },
        ),
        migrations.AddField(
            model_name='mapping_definition',
            name='memberMapping',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.member_mapping'),
        ),
        migrations.CreateModel(
            name='MEMBER_MAPPING_ITEM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isSource', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='isSource')),
                ('row', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='row')),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.member')),
                ('member_hierarchy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.member_hierarchy')),
            ],
            options={
                'verbose_name': 'MEMBER_MAPPING_ITEM',
                'verbose_name_plural': 'MEMBER_MAPPING_ITEMs',
            },
        ),
        migrations.AddField(
            model_name='member_mapping',
            name='memberMappingItems',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.member_mapping_item'),
        ),
        migrations.CreateModel(
            name='ModuleList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modules', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.module')),
            ],
            options={
                'verbose_name': 'ModuleList',
                'verbose_name_plural': 'ModuleLists',
            },
        ),
        migrations.CreateModel(
            name='ColumnFilters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filters', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.filter')),
                ('column', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.reportcolumn')),
            ],
            options={
                'verbose_name': 'ColumnFilters',
                'verbose_name_plural': 'ColumnFilterss',
            },
        ),
        migrations.CreateModel(
            name='ReportCell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datapointID', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='datapointID')),
                ('filters', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.filter')),
                ('column', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.reportcolumn')),
                ('row', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.reportrow')),
            ],
            options={
                'verbose_name': 'ReportCell',
                'verbose_name_plural': 'ReportCells',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('columns', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.reportcolumn')),
                ('rows', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.reportrow')),
            ],
            options={
                'verbose_name': 'Report',
                'verbose_name_plural': 'Reports',
            },
        ),
        migrations.CreateModel(
            name='RowFilters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filters', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.filter')),
                ('row', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.reportrow')),
            ],
            options={
                'verbose_name': 'RowFilters',
                'verbose_name_plural': 'RowFilterss',
            },
        ),
        migrations.CreateModel(
            name='RulesForILTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rulesForTablePart', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.ruleforiltablepart')),
            ],
            options={
                'verbose_name': 'RulesForILTable',
                'verbose_name_plural': 'RulesForILTables',
            },
        ),
        migrations.CreateModel(
            name='RulesForReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rulesForTable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.rulesforiltable')),
            ],
            options={
                'verbose_name': 'RulesForReport',
                'verbose_name_plural': 'RulesForReports',
            },
        ),
        migrations.CreateModel(
            name='SelectValueAs',
            fields=[
                ('selectcolumn_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.selectcolumn')),
                ('value', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='value')),
            ],
            options={
                'verbose_name': 'SelectValueAs',
                'verbose_name_plural': 'SelectValueAss',
            },
            bases=('pybird.selectcolumn',),
        ),
        migrations.AddField(
            model_name='ruleforiltablepart',
            name='columns',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.selectcolumn'),
        ),
        migrations.CreateModel(
            name='SUBDOMAIN',
            fields=[
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='code')),
                ('description', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='description')),
                ('is_listed', models.BooleanField(blank=True, default=None, null=True, verbose_name='is_listed')),
                ('is_natural', models.BooleanField(blank=True, default=None, null=True, verbose_name='is_natural')),
                ('subdomain_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='subdomain_id')),
                ('domain_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.domain')),
                ('facet_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.facet_collection')),
                ('maintenance_agency_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.maintenance_agency')),
            ],
            options={
                'verbose_name': 'SUBDOMAIN',
                'verbose_name_plural': 'SUBDOMAINs',
            },
        ),
        migrations.CreateModel(
            name='FRAMEWORK_SUBDOMAIN',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('framework_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.framework')),
                ('subdomain_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.subdomain')),
            ],
            options={
                'verbose_name': 'FRAMEWORK_SUBDOMAIN',
                'verbose_name_plural': 'FRAMEWORK_SUBDOMAINs',
            },
        ),
        migrations.AddField(
            model_name='cube_structure_item',
            name='subdomain_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.subdomain'),
        ),
        migrations.AddField(
            model_name='combination_item',
            name='subdomain_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.subdomain'),
        ),
        migrations.CreateModel(
            name='SUBDOMAIN_ENUMERATION',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='order')),
                ('valid_from', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_from')),
                ('valid_to', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_to')),
                ('member_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.member')),
            ],
            options={
                'verbose_name': 'SUBDOMAIN_ENUMERATION',
                'verbose_name_plural': 'SUBDOMAIN_ENUMERATIONs',
            },
        ),
        migrations.AddField(
            model_name='subdomain',
            name='items',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.subdomain_enumeration'),
        ),
        migrations.CreateModel(
            name='TABLE',
            fields=[
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='code')),
                ('description', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='description')),
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='name')),
                ('table_id', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='table_id')),
                ('valid_from', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_from')),
                ('valid_to', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_to')),
                ('version', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='version')),
                ('displayName', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='displayName')),
                ('maintenance_agency_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.maintenance_agency')),
            ],
            options={
                'verbose_name': 'TABLE',
                'verbose_name_plural': 'TABLEs',
            },
        ),
        migrations.AddField(
            model_name='axis',
            name='table_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.table'),
        ),
        migrations.CreateModel(
            name='TABLE_CELL',
            fields=[
                ('cell_id', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='cell_id')),
                ('is_shaded', models.BooleanField(blank=True, default=None, null=True, verbose_name='is_open_axis')),
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='name')),
                ('combination_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.combination')),
                ('table_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.table')),
            ],
            options={
                'verbose_name': 'TABLE_CELL',
                'verbose_name_plural': 'TABLE_CELLs',
            },
        ),
        migrations.CreateModel(
            name='CELL_POSITION',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('axis_ordinate_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.axis_ordinate')),
                ('cell_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.table_cell')),
            ],
            options={
                'verbose_name': 'CELL_POSITION',
                'verbose_name_plural': 'CELL_POSITIONs',
            },
        ),
        migrations.CreateModel(
            name='TableFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('predicate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.predicate')),
            ],
            options={
                'verbose_name': 'TableFilter',
                'verbose_name_plural': 'TableFilters',
            },
        ),
        migrations.AddField(
            model_name='ruleforiltablepart',
            name='whereClause',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.tablefilter'),
        ),
        migrations.CreateModel(
            name='VARIABLE',
            fields=[
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='code')),
                ('description', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='description')),
                ('primary_concept', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='primary_concept')),
                ('variable_id', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='variable_id')),
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='name')),
                ('displayName', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='displayName')),
                ('domain_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.domain')),
                ('maintenance_agency_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.maintenance_agency')),
            ],
            options={
                'verbose_name': 'VARIABLE',
                'verbose_name_plural': 'VARIABLEs',
            },
        ),
        migrations.CreateModel(
            name='ORDINATE_ITEM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_starting_member_included', models.BooleanField(blank=True, default=None, null=True, verbose_name='is_open_axis')),
                ('axis_ordinate_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.axis_ordinate')),
                ('member_hierarchy_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.member_hierarchy')),
                ('member_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.member')),
                ('starting_member_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='starting_member_id', to='pybird.member')),
                ('variable_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.variable')),
            ],
            options={
                'verbose_name': 'ORDINATE_ITEM',
                'verbose_name_plural': 'ORDINATE_ITEMs',
            },
        ),
        migrations.AddField(
            model_name='member_mapping_item',
            name='variable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.variable'),
        ),
        migrations.AddField(
            model_name='cube_structure_item',
            name='attribute_associated_variable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attribute_associated_variable', to='pybird.variable'),
        ),
        migrations.AddField(
            model_name='cube_structure_item',
            name='variable_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.variable'),
        ),
        migrations.CreateModel(
            name='CUBE_RELATIONSHIP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='code')),
                ('cube_relationship_id', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='cube_relationship_id')),
                ('description', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='description')),
                ('establishes_integrity', models.BooleanField(blank=True, default=None, null=True, verbose_name='establishes_integrity')),
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='name')),
                ('valid_from', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_from')),
                ('valid_to', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_to')),
                ('version', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='version')),
                ('foreign_cube_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='foreign_cube', to='pybird.cube')),
                ('primary_cube_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_cube', to='pybird.cube')),
                ('maintenance_agency_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.maintenance_agency')),
                ('foreign_cube_variable_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='foreign_cube_variable_code', to='pybird.variable')),
                ('primary_cube_variable_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_cube_variable_id', to='pybird.variable')),
            ],
            options={
                'verbose_name': 'CUBE_RELATIONSHIP',
                'verbose_name_plural': 'CUBE_RELATIONSHIPs',
            },
        ),
        migrations.AddField(
            model_name='combination_item',
            name='variable_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.variable'),
        ),
        migrations.AddField(
            model_name='mapping_definition',
            name='variableMapping',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.variable_mapping'),
        ),
        migrations.CreateModel(
            name='VARIABLE_MAPPING_ITEM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isSource', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='isSource')),
                ('variable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.variable')),
            ],
            options={
                'verbose_name': 'VARIABLE_MAPPING_ITEM',
                'verbose_name_plural': 'VARIABLE_MAPPING_ITEMs',
            },
        ),
        migrations.AddField(
            model_name='variable_mapping',
            name='varaibleMappingItems',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.variable_mapping_item'),
        ),
        migrations.CreateModel(
            name='VARIABLE_SET',
            fields=[
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='code')),
                ('description', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='description')),
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='name')),
                ('variable_set_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='variable_set_id')),
                ('maintenance_agency_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='variable_set_maintenance_agency_id', to='pybird.maintenance_agency')),
            ],
            options={
                'verbose_name': 'VARIABLE_SET',
                'verbose_name_plural': 'VARIABLE_SETs',
            },
        ),
        migrations.CreateModel(
            name='FRAMEWORK_VARIABLE_SET',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('framework_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.framework')),
                ('variable_set_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.variable_set')),
            ],
            options={
                'verbose_name': 'FRAMEWORK_VARIABLE_SET',
                'verbose_name_plural': 'FRAMEWORK_VARIABLE_SETs',
            },
        ),
        migrations.AddField(
            model_name='cube_structure_item',
            name='variable_set_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.variable_set'),
        ),
        migrations.AddField(
            model_name='combination_item',
            name='variable_set_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.variable_set'),
        ),
        migrations.CreateModel(
            name='VARIABLE_SET_ENUMERATION',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_flow', models.BooleanField(blank=True, default=None, null=True, verbose_name='is_flow')),
                ('order', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='order')),
                ('valid_from', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_from')),
                ('valid_to', models.DateTimeField(blank=True, default=None, null=True, verbose_name='valid_to')),
                ('subdomain_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.subdomain')),
                ('variable_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.variable')),
            ],
            options={
                'verbose_name': 'VARIABLE_SET_ENUMERATION',
                'verbose_name_plural': 'VARIABLE_SET_ENUMERATIONs',
            },
        ),
        migrations.AddField(
            model_name='variable_set',
            name='variable_set_items',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.variable_set_enumeration'),
        ),
        migrations.CreateModel(
            name='VARIABLE_SET_MAPPING',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sourceMapping', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sourceMapping', to='pybird.mapping_definition')),
                ('targetMapping', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='targetMapping', to='pybird.mapping_definition')),
            ],
            options={
                'verbose_name': 'VARIABLE_SET_MAPPING',
                'verbose_name_plural': 'VARIABLE_SET_MAPPINGs',
            },
        ),
        migrations.CreateModel(
            name='WholeReportFilters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filters', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.filter')),
            ],
            options={
                'verbose_name': 'WholeReportFilters',
                'verbose_name_plural': 'WholeReportFilterss',
            },
        ),
        migrations.CreateModel(
            name='AndPredicate',
            fields=[
                ('predicate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.predicate')),
                ('operands', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='and_predicate', to='pybird.predicate')),
            ],
            options={
                'verbose_name': 'AndPredicate',
                'verbose_name_plural': 'AndPredicates',
            },
            bases=('pybird.predicate',),
        ),
        migrations.CreateModel(
            name='NotPredicate',
            fields=[
                ('predicate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.predicate')),
                ('operand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='not_predicate', to='pybird.predicate')),
            ],
            options={
                'verbose_name': 'NotPredicate',
                'verbose_name_plural': 'NotPredicates',
            },
            bases=('pybird.predicate',),
        ),
        migrations.CreateModel(
            name='OrPredicate',
            fields=[
                ('predicate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.predicate')),
                ('operands', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='or_predicate', to='pybird.predicate')),
            ],
            options={
                'verbose_name': 'OrPredicate',
                'verbose_name_plural': 'OrPredicates',
            },
            bases=('pybird.predicate',),
        ),
        migrations.CreateModel(
            name='AxisModule',
            fields=[
                ('sddmodule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.sddmodule')),
                ('axes', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.axis')),
            ],
            options={
                'verbose_name': 'AxisModule',
                'verbose_name_plural': 'AxisModules',
            },
            bases=('pybird.sddmodule',),
        ),
        migrations.CreateModel(
            name='AxisOrdinateModule',
            fields=[
                ('sddmodule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.sddmodule')),
                ('axis_ordinates', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.axis_ordinate')),
            ],
            options={
                'verbose_name': 'AxisOrdinateModule',
                'verbose_name_plural': 'AxisOrdinateModules',
            },
            bases=('pybird.sddmodule',),
        ),
        migrations.CreateModel(
            name='CellPositionModule',
            fields=[
                ('sddmodule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.sddmodule')),
                ('cellPositions', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.cell_position')),
            ],
            options={
                'verbose_name': 'CellPositionModule',
                'verbose_name_plural': 'CellPositionModules',
            },
            bases=('pybird.sddmodule',),
        ),
        migrations.CreateModel(
            name='CombinationModule',
            fields=[
                ('sddmodule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.sddmodule')),
                ('combination_items', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.combination_item')),
                ('combinations', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.combination')),
                ('cubeToCombinationLinks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.cube_to_combination')),
            ],
            options={
                'verbose_name': 'CombinationModule',
                'verbose_name_plural': 'CombinationModules',
            },
            bases=('pybird.sddmodule',),
        ),
        migrations.CreateModel(
            name='CubeMappingModule',
            fields=[
                ('sddmodule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.sddmodule')),
                ('cubeMappings', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.cube_mapping')),
            ],
            options={
                'verbose_name': 'CubeMappingModule',
                'verbose_name_plural': 'CubeMappingModules',
            },
            bases=('pybird.sddmodule',),
        ),
        migrations.CreateModel(
            name='CubeModule',
            fields=[
                ('sddmodule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.sddmodule')),
                ('cubeStructureItems', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.cube_structure_item')),
                ('cubeStructures', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.cube_structure')),
                ('cubes', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.cube')),
            ],
            options={
                'verbose_name': 'CubeModule',
                'verbose_name_plural': 'CubeModules',
            },
            bases=('pybird.sddmodule',),
        ),
        migrations.CreateModel(
            name='DomainModule',
            fields=[
                ('sddmodule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.sddmodule')),
                ('domains', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.domain')),
            ],
            options={
                'verbose_name': 'DomainModule',
                'verbose_name_plural': 'DomainModules',
            },
            bases=('pybird.sddmodule',),
        ),
        migrations.CreateModel(
            name='FrameworkModule',
            fields=[
                ('sddmodule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.sddmodule')),
                ('frameworks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.framework')),
            ],
            options={
                'verbose_name': 'FrameworkModule',
                'verbose_name_plural': 'FrameworkModules',
            },
            bases=('pybird.sddmodule',),
        ),
        migrations.CreateModel(
            name='MaintenanceAgencyModule',
            fields=[
                ('sddmodule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.sddmodule')),
                ('maintenanceAgencies', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.maintenance_agency')),
            ],
            options={
                'verbose_name': 'MaintenanceAgencyModule',
                'verbose_name_plural': 'MaintenanceAgencyModules',
            },
            bases=('pybird.sddmodule',),
        ),
        migrations.CreateModel(
            name='MappingDefinitionModule',
            fields=[
                ('sddmodule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.sddmodule')),
                ('mappings', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.mapping_definition')),
            ],
            options={
                'verbose_name': 'MappingDefinitionModule',
                'verbose_name_plural': 'MappingDefinitionModules',
            },
            bases=('pybird.sddmodule',),
        ),
        migrations.CreateModel(
            name='MemberHierarchyModule',
            fields=[
                ('sddmodule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.sddmodule')),
                ('memberHierarchies', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.member_hierarchy')),
                ('memberHierarchiesNodes', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.member_hierarchy_node')),
            ],
            options={
                'verbose_name': 'MemberHierarchyModule',
                'verbose_name_plural': 'MemberHierarchyModules',
            },
            bases=('pybird.sddmodule',),
        ),
        migrations.CreateModel(
            name='MemberMappingModule',
            fields=[
                ('sddmodule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.sddmodule')),
                ('memberMappings', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.member_mapping')),
            ],
            options={
                'verbose_name': 'MemberMappingModule',
                'verbose_name_plural': 'MemberMappingModules',
            },
            bases=('pybird.sddmodule',),
        ),
        migrations.CreateModel(
            name='MemberModule',
            fields=[
                ('sddmodule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.sddmodule')),
                ('members', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.member')),
            ],
            options={
                'verbose_name': 'MemberModule',
                'verbose_name_plural': 'MemberModules',
            },
            bases=('pybird.sddmodule',),
        ),
        migrations.CreateModel(
            name='OrdinateItemModule',
            fields=[
                ('sddmodule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.sddmodule')),
                ('ordinateItems', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.ordinate_item')),
            ],
            options={
                'verbose_name': 'OrdinateItemModule',
                'verbose_name_plural': 'OrdinateItemModules',
            },
            bases=('pybird.sddmodule',),
        ),
        migrations.CreateModel(
            name='ReportTableModule',
            fields=[
                ('sddmodule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.sddmodule')),
                ('reportTables', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.table')),
            ],
            options={
                'verbose_name': 'ReportTableModule',
                'verbose_name_plural': 'ReportTableModules',
            },
            bases=('pybird.sddmodule',),
        ),
        migrations.CreateModel(
            name='SMCubesCoreModel',
            fields=[
                ('sddmodule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.sddmodule')),
                ('domainModules', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.domainmodule')),
                ('maintenanceAgencyModules', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.maintenanceagencymodule')),
                ('memberHierarchyModules', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.memberhierarchymodule')),
                ('memberModules', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.membermodule')),
            ],
            options={
                'verbose_name': 'SMCubesCoreModel',
                'verbose_name_plural': 'SMCubesCoreModels',
            },
            bases=('pybird.sddmodule',),
        ),
        migrations.CreateModel(
            name='SMCubesExtraModel',
            fields=[
                ('sddmodule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.sddmodule')),
                ('axisModules', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.axismodule')),
                ('axisOrdinateModules', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.axisordinatemodule')),
                ('cellPositionModules', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.cellpositionmodule')),
                ('combinationModules', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.combinationmodule')),
                ('cubeMappingModules', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.cubemappingmodule')),
                ('cubeModules', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.cubemodule')),
                ('frameworkModules', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.frameworkmodule')),
                ('mappingDefinitionModules', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.mappingdefinitionmodule')),
                ('memberMappingModules', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.membermappingmodule')),
                ('ordinateItemsModules', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.ordinateitemmodule')),
                ('reportTableModules', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.reporttablemodule')),
            ],
            options={
                'verbose_name': 'SMCubesExtraModel',
                'verbose_name_plural': 'SMCubesExtraModels',
            },
            bases=('pybird.sddmodule',),
        ),
        migrations.CreateModel(
            name='SMCubesModel',
            fields=[
                ('sddmodule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.sddmodule')),
                ('coreModel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.smcubescoremodel')),
                ('extraModel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.smcubesextramodel')),
            ],
            options={
                'verbose_name': 'SMCubesModel',
                'verbose_name_plural': 'SMCubesModels',
            },
            bases=('pybird.sddmodule',),
        ),
        migrations.CreateModel(
            name='SubDomainModule',
            fields=[
                ('sddmodule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.sddmodule')),
                ('subdomains', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.subdomain')),
            ],
            options={
                'verbose_name': 'SubDomainModule',
                'verbose_name_plural': 'SubDomainModules',
            },
            bases=('pybird.sddmodule',),
        ),
        migrations.AddField(
            model_name='smcubescoremodel',
            name='subDomainModules',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.subdomainmodule'),
        ),
        migrations.CreateModel(
            name='TableCellModule',
            fields=[
                ('sddmodule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.sddmodule')),
                ('tableCells', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.table_cell')),
            ],
            options={
                'verbose_name': 'TableCellModule',
                'verbose_name_plural': 'TableCellModules',
            },
            bases=('pybird.sddmodule',),
        ),
        migrations.AddField(
            model_name='smcubesextramodel',
            name='tableCellModules',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.tablecellmodule'),
        ),
        migrations.CreateModel(
            name='VariableMappingModule',
            fields=[
                ('sddmodule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.sddmodule')),
                ('variableMappings', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.variable_mapping')),
            ],
            options={
                'verbose_name': 'VariableMappingModule',
                'verbose_name_plural': 'VariableMappingModules',
            },
            bases=('pybird.sddmodule',),
        ),
        migrations.AddField(
            model_name='smcubesextramodel',
            name='variableMappingModules',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.variablemappingmodule'),
        ),
        migrations.CreateModel(
            name='VariableModule',
            fields=[
                ('sddmodule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.sddmodule')),
                ('variables', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.variable')),
            ],
            options={
                'verbose_name': 'VariableModule',
                'verbose_name_plural': 'VariableModules',
            },
            bases=('pybird.sddmodule',),
        ),
        migrations.AddField(
            model_name='smcubescoremodel',
            name='variableModules',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.variablemodule'),
        ),
        migrations.CreateModel(
            name='VariableSetModule',
            fields=[
                ('sddmodule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.sddmodule')),
                ('variableSets', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.variable_set')),
            ],
            options={
                'verbose_name': 'VariableSetModule',
                'verbose_name_plural': 'VariableSetModules',
            },
            bases=('pybird.sddmodule',),
        ),
        migrations.AddField(
            model_name='smcubescoremodel',
            name='variableSetModules',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.variablesetmodule'),
        ),
        migrations.CreateModel(
            name='CellBasedReport',
            fields=[
                ('report_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.report')),
                ('reportCells', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.reportcell')),
            ],
            options={
                'verbose_name': 'CellBasedReport',
                'verbose_name_plural': 'CellBasedReports',
            },
            bases=('pybird.report',),
        ),
        migrations.CreateModel(
            name='RowColumnBasedReport',
            fields=[
                ('report_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.report')),
                ('columnFilters', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.columnfilters')),
                ('rowFilters', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.rowfilters')),
                ('wholeReportFilters', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.wholereportfilters')),
            ],
            options={
                'verbose_name': 'RowColumnBasedReport',
                'verbose_name_plural': 'RowColumnBasedReports',
            },
            bases=('pybird.report',),
        ),
        migrations.AddField(
            model_name='elmodelelement',
            name='eAnnotations',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.elannotation'),
        ),
        migrations.CreateModel(
            name='ELAnnotationDirective',
            fields=[
                ('elnamedelement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.elnamedelement')),
                ('sourceURI', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='sourceURI')),
            ],
            options={
                'verbose_name': 'ELAnnotationDirective',
                'verbose_name_plural': 'ELAnnotationDirectives',
            },
            bases=('pybird.elnamedelement',),
        ),
        migrations.CreateModel(
            name='ELClassifier',
            fields=[
                ('elnamedelement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.elnamedelement')),
            ],
            options={
                'verbose_name': 'ELClassifier',
                'verbose_name_plural': 'ELClassifiers',
            },
            bases=('pybird.elnamedelement',),
        ),
        migrations.CreateModel(
            name='ELEnumLiteral',
            fields=[
                ('elnamedelement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.elnamedelement')),
                ('value', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='value')),
                ('literal', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='literal')),
            ],
            options={
                'verbose_name': 'ELEnumLiteral',
                'verbose_name_plural': 'ELEnumLiterals',
            },
            bases=('pybird.elnamedelement',),
        ),
        migrations.CreateModel(
            name='ELTypedElement',
            fields=[
                ('elnamedelement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.elnamedelement')),
                ('upperBound', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='upperBound')),
                ('lowerBound', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='lowerBound')),
            ],
            options={
                'verbose_name': 'ELTypedElement',
                'verbose_name_plural': 'ELTypedElements',
            },
            bases=('pybird.elnamedelement',),
        ),
        migrations.CreateModel(
            name='GenerationRulesModule',
            fields=[
                ('module_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.module')),
                ('rulesForReport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.rulesforreport')),
            ],
            options={
                'verbose_name': 'GenerationRulesModule',
                'verbose_name_plural': 'GenerationRulesModules',
            },
            bases=('pybird.module',),
        ),
        migrations.CreateModel(
            name='ReportModule',
            fields=[
                ('module_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.module')),
                ('reports', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.report')),
            ],
            options={
                'verbose_name': 'ReportModule',
                'verbose_name_plural': 'ReportModules',
            },
            bases=('pybird.module',),
        ),
        migrations.AddField(
            model_name='module',
            name='annotationDirectives',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='the_annotation_directives', to='pybird.elannotationdirective'),
        ),
        migrations.AddField(
            model_name='elannotationdirective',
            name='module',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.module'),
        ),
        migrations.AddField(
            model_name='elannotation',
            name='source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.elannotationdirective'),
        ),
        migrations.CreateModel(
            name='ELClass',
            fields=[
                ('elclassifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.elclassifier')),
                ('eAbstract', models.BooleanField(blank=True, default=None, null=True, verbose_name='eAbstract')),
                ('eSuperTypes', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.elclass')),
            ],
            options={
                'verbose_name': 'ELClass',
                'verbose_name_plural': 'ELClasss',
            },
            bases=('pybird.elclassifier',),
        ),
        migrations.CreateModel(
            name='ELDataType',
            fields=[
                ('elclassifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.elclassifier')),
                ('industryName', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='industryName')),
            ],
            options={
                'verbose_name': 'ELDataType',
                'verbose_name_plural': 'ELDataTypes',
            },
            bases=('pybird.elclassifier',),
        ),
        migrations.CreateModel(
            name='ELPackage',
            fields=[
                ('module_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.module')),
                ('nsURI', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='nsURI')),
                ('nsPrefix', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='nsPrefix')),
                ('eClassifiers', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.elclassifier')),
            ],
            options={
                'verbose_name': 'ELPackage',
                'verbose_name_plural': 'ELPackages',
            },
            bases=('pybird.module',),
        ),
        migrations.AddField(
            model_name='elclassifier',
            name='ePackage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.elpackage'),
        ),
        migrations.CreateModel(
            name='SelectColumnMemberAs',
            fields=[
                ('selectcolumn_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.selectcolumn')),
                ('memberAsConstant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.elenumliteral')),
            ],
            options={
                'verbose_name': 'SelectColumnMemberAs',
                'verbose_name_plural': 'SelectColumnMemberAss',
            },
            bases=('pybird.selectcolumn',),
        ),
        migrations.AddField(
            model_name='filter',
            name='member',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.elenumliteral'),
        ),
        migrations.CreateModel(
            name='ELOperation',
            fields=[
                ('eltypedelement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.eltypedelement')),
                ('body', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='body')),
            ],
            options={
                'verbose_name': 'ELOperation',
                'verbose_name_plural': 'ELOperations',
            },
            bases=('pybird.eltypedelement',),
        ),
        migrations.CreateModel(
            name='ELParameter',
            fields=[
                ('eltypedelement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.eltypedelement')),
            ],
            options={
                'verbose_name': 'ELParameter',
                'verbose_name_plural': 'ELParameters',
            },
            bases=('pybird.eltypedelement',),
        ),
        migrations.CreateModel(
            name='ELStructuralFeature',
            fields=[
                ('eltypedelement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.eltypedelement')),
            ],
            options={
                'verbose_name': 'ELStructuralFeature',
                'verbose_name_plural': 'ELStructuralFeatures',
            },
            bases=('pybird.eltypedelement',),
        ),
        migrations.AddField(
            model_name='eltypedelement',
            name='eType',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.elclassifier'),
        ),
        migrations.AddField(
            model_name='rulesforreport',
            name='outputLayerCube',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.elclass'),
        ),
        migrations.AddField(
            model_name='rulesforiltable',
            name='inputLayerTable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.elclass'),
        ),
        migrations.AddField(
            model_name='report',
            name='outputLayer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.elclass'),
        ),
        migrations.AddField(
            model_name='filter',
            name='outputLayer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.elclass'),
        ),
        migrations.CreateModel(
            name='SelectDerivedColumnAs',
            fields=[
                ('selectcolumn_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.selectcolumn')),
                ('attribute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.eloperation')),
            ],
            options={
                'verbose_name': 'SelectDerivedColumnAs',
                'verbose_name_plural': 'SelectDerivedColumnAss',
            },
            bases=('pybird.selectcolumn',),
        ),
        migrations.AddField(
            model_name='selectcolumn',
            name='asAttribute',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.eloperation'),
        ),
        migrations.AddField(
            model_name='rowfilters',
            name='metric',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.eloperation'),
        ),
        migrations.AddField(
            model_name='reportcell',
            name='metric',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.eloperation'),
        ),
        migrations.AddField(
            model_name='filter',
            name='operation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.eloperation'),
        ),
        migrations.AddField(
            model_name='elclass',
            name='eOperations',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.eloperation'),
        ),
        migrations.AddField(
            model_name='columnfilters',
            name='metric',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.eloperation'),
        ),
        migrations.CreateModel(
            name='ELAttribute',
            fields=[
                ('elstructuralfeature_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.elstructuralfeature')),
                ('iD', models.BooleanField(blank=True, default=None, null=True, verbose_name='iD')),
                ('eAttributeType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.eldatatype')),
            ],
            options={
                'verbose_name': 'ELAttribute',
                'verbose_name_plural': 'ELAttributes',
            },
            bases=('pybird.elstructuralfeature',),
        ),
        migrations.AddField(
            model_name='elclass',
            name='eStructuralFeatures',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.elstructuralfeature'),
        ),
        migrations.CreateModel(
            name='AttributePredicate',
            fields=[
                ('predicate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.predicate')),
                ('comparitor', models.CharField(blank=True, choices=[('less_than', 'less_than'), ('equals', 'equals'), ('greater_than', 'greater_than'), ('not_equals', 'not_equals')], default=None, max_length=255, null=True, verbose_name='comparitor')),
                ('value', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='value')),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.elenumliteral')),
                ('attribute1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.elstructuralfeature')),
            ],
            options={
                'verbose_name': 'AttributePredicate',
                'verbose_name_plural': 'AttributePredicates',
            },
            bases=('pybird.predicate',),
        ),
        migrations.CreateModel(
            name='ELEnum',
            fields=[
                ('eldatatype_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.eldatatype')),
                ('eLiterals', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.elenumliteral')),
            ],
            options={
                'verbose_name': 'ELEnum',
                'verbose_name_plural': 'ELEnums',
            },
            bases=('pybird.eldatatype',),
        ),
        migrations.CreateModel(
            name='SelectColumnAttributeAs',
            fields=[
                ('selectcolumn_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.selectcolumn')),
                ('attribute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.elattribute')),
            ],
            options={
                'verbose_name': 'SelectColumnAttributeAs',
                'verbose_name_plural': 'SelectColumnAttributeAss',
            },
            bases=('pybird.selectcolumn',),
        ),
        migrations.CreateModel(
            name='ELReference',
            fields=[
                ('elstructuralfeature_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pybird.elstructuralfeature')),
                ('containment', models.BooleanField(blank=True, default=None, null=True, verbose_name='containment')),
                ('eOpposite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.elreference')),
                ('eReferenceType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pybird.elclassifier')),
            ],
            options={
                'verbose_name': 'ELReference',
                'verbose_name_plural': 'ELReferences',
            },
            bases=('pybird.elstructuralfeature',),
        ),
    ]
